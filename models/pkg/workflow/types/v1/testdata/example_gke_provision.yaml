version: v1
description: Relay Deploy Demo

parameters:
  project:
    description: The name of the project in Google Cloud Platform
  terraform_state_bucket: 
    description: The name of the bucket you'd like to store terraform state in
  slack_channel:
    description: Slack channel (include preceding hashtag)
  slack_message:
    description: Slack message

steps:
- name: provision-gcs-storage-bucket
  image: relaysh/core
  input: 
    - apk --no-cache add curl python &&
      curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-264.0.0-linux-x86_64.tar.gz &&
      tar xzf google-cloud-sdk-264.0.0-linux-x86_64.tar.gz &&
      rm google-cloud-sdk-264.0.0-linux-x86_64.tar.gz &&
      PATH=/workspace/google-cloud-sdk/bin:$PATH &&
      PROJECT=$(ni get -p {.gcp_project}) &&
      TERRAFORM_STATE_BUCKET=$(ni get -p {.bucket}) &&
      ni get -p {.credentials} &&
      ni credentials config &&
      gcloud auth activate-service-account --key-file /workspace/credentials.json &&
      gcloud config set project $PROJECT &&
      gcloud config set core/disable_usage_reporting true &&
      gcloud config set component_manager/disable_update_check true &&
      if gsutil ls | grep -q gs://$TERRAFORM_STATE_BUCKET; then exit 0; else gsutil mb -l us-west1 gs://$TERRAFORM_STATE_BUCKET; fi
  spec:
    gcp_project: 
      $type: Parameter
      name: project
    bucket: 
      $type: Parameter
      name: terraform_state_bucket
    credentials:
      credentials.json:
        $type: Secret
        name: credentials
- name: provision-gke-with-terraform
  dependsOn:
    - provision-gcs-storage-bucket
  image: relaysh/terraform
  spec:
    backendConfig:
      bucket: 
        $type: Parameter
        name: terraform_state_bucket
    vars:
      gcp_region: us-west1
      gcp_location: us-west1-a
      gcp_project: 
        $type: Parameter
        name: project
    workspace: production
    directory: example-workflows/gke-provision-and-deploy-workflow/infra/
    credentials:
      credentials.json:
        $type: Secret
        name: credentials
    git:
      name: relay-workflow-examples
      repository: https://github.com/puppetlabs/relay-workflow-examples.git
- name: deploy-to-gke
  dependsOn: provision-gke-with-terraform
  image: relaysh/kubectl
  spec:
    command: apply
    file: example-workflows/gke-provision-and-deploy-workflow/deploy/deploy.yaml
    namespace: default
    cluster:
      name: relay-example-cluster
      url:
        $type: Output
        name: k8s_endpoint
        taskName: provision-gke-with-terraform
      cadata:
        $type: Output
        name: k8s_master_auth_cluster_ca_certificate
        taskName: provision-gke-with-terraform
      token:
        $type: Output
        name: k8s_current_access_token
        taskName: provision-gke-with-terraform
    git:
      name: relay-workflow-examples
      repository: https://github.com/puppetlabs/relay-workflow-examples.git
- name: slack-notify
  dependsOn:
    - deploy-to-gke
  image: relaysh/slack-notification
  spec:
    apitoken:
       $type: Secret
       name: slacktoken
    channel:
       $type: Parameter
       name: slack_channel
    message:
       $type: Parameter
       name: slack_message
