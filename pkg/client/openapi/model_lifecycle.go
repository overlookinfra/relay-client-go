/*
 * Relay API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v20200615
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// Lifecycle An object with created and updated times
type Lifecycle struct {
	// Time of creation
	CreatedAt time.Time `json:"created_at"`
	// Time of last update
	UpdatedAt time.Time `json:"updated_at"`
}

// NewLifecycle instantiates a new Lifecycle object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLifecycle(createdAt time.Time, updatedAt time.Time) *Lifecycle {
	this := Lifecycle{}
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	return &this
}

// NewLifecycleWithDefaults instantiates a new Lifecycle object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLifecycleWithDefaults() *Lifecycle {
	this := Lifecycle{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value
func (o *Lifecycle) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *Lifecycle) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *Lifecycle) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *Lifecycle) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *Lifecycle) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *Lifecycle) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o Lifecycle) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["created_at"] = o.CreatedAt
	}
	if true {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableLifecycle struct {
	value *Lifecycle
	isSet bool
}

func (v NullableLifecycle) Get() *Lifecycle {
	return v.value
}

func (v *NullableLifecycle) Set(val *Lifecycle) {
	v.value = val
	v.isSet = true
}

func (v NullableLifecycle) IsSet() bool {
	return v.isSet
}

func (v *NullableLifecycle) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLifecycle(val *Lifecycle) *NullableLifecycle {
	return &NullableLifecycle{value: val, isSet: true}
}

func (v NullableLifecycle) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLifecycle) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


