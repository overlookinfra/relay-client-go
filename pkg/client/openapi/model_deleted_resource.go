/*
 * Relay API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v20200615
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// DeletedResource Information about the deleted resource
type DeletedResource struct {
	// Deleted resource id
	ResourceId string `json:"resource_id"`
	// Was the resource successfully deleted?
	Success bool `json:"success"`
}

// NewDeletedResource instantiates a new DeletedResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeletedResource(resourceId string, success bool) *DeletedResource {
	this := DeletedResource{}
	this.ResourceId = resourceId
	this.Success = success
	return &this
}

// NewDeletedResourceWithDefaults instantiates a new DeletedResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeletedResourceWithDefaults() *DeletedResource {
	this := DeletedResource{}
	return &this
}

// GetResourceId returns the ResourceId field value
func (o *DeletedResource) GetResourceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceId
}

// GetResourceIdOk returns a tuple with the ResourceId field value
// and a boolean to check if the value has been set.
func (o *DeletedResource) GetResourceIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ResourceId, true
}

// SetResourceId sets field value
func (o *DeletedResource) SetResourceId(v string) {
	o.ResourceId = v
}

// GetSuccess returns the Success field value
func (o *DeletedResource) GetSuccess() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Success
}

// GetSuccessOk returns a tuple with the Success field value
// and a boolean to check if the value has been set.
func (o *DeletedResource) GetSuccessOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Success, true
}

// SetSuccess sets field value
func (o *DeletedResource) SetSuccess(v bool) {
	o.Success = v
}

func (o DeletedResource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["resource_id"] = o.ResourceId
	}
	if true {
		toSerialize["success"] = o.Success
	}
	return json.Marshal(toSerialize)
}

type NullableDeletedResource struct {
	value *DeletedResource
	isSet bool
}

func (v NullableDeletedResource) Get() *DeletedResource {
	return v.value
}

func (v *NullableDeletedResource) Set(val *DeletedResource) {
	v.value = val
	v.isSet = true
}

func (v NullableDeletedResource) IsSet() bool {
	return v.isSet
}

func (v *NullableDeletedResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeletedResource(val *DeletedResource) *NullableDeletedResource {
	return &NullableDeletedResource{value: val, isSet: true}
}

func (v NullableDeletedResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeletedResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


