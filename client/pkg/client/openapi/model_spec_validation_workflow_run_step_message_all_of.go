/*
Relay API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v20200615
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SpecValidationWorkflowRunStepMessageAllOf An error or notice produced by JSON Schema validation of a step's specification
type SpecValidationWorkflowRunStepMessageAllOf struct {
	// An expression evaluated by the backend
	Expression interface{} `json:"expression,omitempty"`
	// A JSON Pointer (RFC 6901) indicating the location of the validation problem
	Path *string `json:"path,omitempty"`
	// The JSON Schema relative to the path that produced the validation message
	Schema interface{} `json:"schema,omitempty"`
	// The type of message
	Type string `json:"type"`
}

// NewSpecValidationWorkflowRunStepMessageAllOf instantiates a new SpecValidationWorkflowRunStepMessageAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpecValidationWorkflowRunStepMessageAllOf(type_ string) *SpecValidationWorkflowRunStepMessageAllOf {
	this := SpecValidationWorkflowRunStepMessageAllOf{}
	this.Type = type_
	return &this
}

// NewSpecValidationWorkflowRunStepMessageAllOfWithDefaults instantiates a new SpecValidationWorkflowRunStepMessageAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpecValidationWorkflowRunStepMessageAllOfWithDefaults() *SpecValidationWorkflowRunStepMessageAllOf {
	this := SpecValidationWorkflowRunStepMessageAllOf{}
	return &this
}

// GetExpression returns the Expression field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SpecValidationWorkflowRunStepMessageAllOf) GetExpression() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Expression
}

// GetExpressionOk returns a tuple with the Expression field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SpecValidationWorkflowRunStepMessageAllOf) GetExpressionOk() (*interface{}, bool) {
	if o == nil || o.Expression == nil {
		return nil, false
	}
	return &o.Expression, true
}

// HasExpression returns a boolean if a field has been set.
func (o *SpecValidationWorkflowRunStepMessageAllOf) HasExpression() bool {
	if o != nil && o.Expression != nil {
		return true
	}

	return false
}

// SetExpression gets a reference to the given interface{} and assigns it to the Expression field.
func (o *SpecValidationWorkflowRunStepMessageAllOf) SetExpression(v interface{}) {
	o.Expression = v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *SpecValidationWorkflowRunStepMessageAllOf) GetPath() string {
	if o == nil || o.Path == nil {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpecValidationWorkflowRunStepMessageAllOf) GetPathOk() (*string, bool) {
	if o == nil || o.Path == nil {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *SpecValidationWorkflowRunStepMessageAllOf) HasPath() bool {
	if o != nil && o.Path != nil {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *SpecValidationWorkflowRunStepMessageAllOf) SetPath(v string) {
	o.Path = &v
}

// GetSchema returns the Schema field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SpecValidationWorkflowRunStepMessageAllOf) GetSchema() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Schema
}

// GetSchemaOk returns a tuple with the Schema field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SpecValidationWorkflowRunStepMessageAllOf) GetSchemaOk() (*interface{}, bool) {
	if o == nil || o.Schema == nil {
		return nil, false
	}
	return &o.Schema, true
}

// HasSchema returns a boolean if a field has been set.
func (o *SpecValidationWorkflowRunStepMessageAllOf) HasSchema() bool {
	if o != nil && o.Schema != nil {
		return true
	}

	return false
}

// SetSchema gets a reference to the given interface{} and assigns it to the Schema field.
func (o *SpecValidationWorkflowRunStepMessageAllOf) SetSchema(v interface{}) {
	o.Schema = v
}

// GetType returns the Type field value
func (o *SpecValidationWorkflowRunStepMessageAllOf) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *SpecValidationWorkflowRunStepMessageAllOf) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *SpecValidationWorkflowRunStepMessageAllOf) SetType(v string) {
	o.Type = v
}

func (o SpecValidationWorkflowRunStepMessageAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Expression != nil {
		toSerialize["expression"] = o.Expression
	}
	if o.Path != nil {
		toSerialize["path"] = o.Path
	}
	if o.Schema != nil {
		toSerialize["schema"] = o.Schema
	}
	if true {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableSpecValidationWorkflowRunStepMessageAllOf struct {
	value *SpecValidationWorkflowRunStepMessageAllOf
	isSet bool
}

func (v NullableSpecValidationWorkflowRunStepMessageAllOf) Get() *SpecValidationWorkflowRunStepMessageAllOf {
	return v.value
}

func (v *NullableSpecValidationWorkflowRunStepMessageAllOf) Set(val *SpecValidationWorkflowRunStepMessageAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableSpecValidationWorkflowRunStepMessageAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableSpecValidationWorkflowRunStepMessageAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpecValidationWorkflowRunStepMessageAllOf(val *SpecValidationWorkflowRunStepMessageAllOf) *NullableSpecValidationWorkflowRunStepMessageAllOf {
	return &NullableSpecValidationWorkflowRunStepMessageAllOf{value: val, isSet: true}
}

func (v NullableSpecValidationWorkflowRunStepMessageAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpecValidationWorkflowRunStepMessageAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
