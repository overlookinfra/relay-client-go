/*
Relay API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v20200615
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// WorkflowRunAllOf Metadata about a workflow run
type WorkflowRunAllOf struct {
	// Connection type and names used by the run
	Connections *[]ConnectionReference           `json:"connections,omitempty"`
	Error       *Error                           `json:"error,omitempty"`
	Parameters  *map[string]WorkflowRunParameter `json:"parameters,omitempty"`
	Revision    WorkflowRevisionSummary          `json:"revision"`
	// Secret names provided to the run, both used and unused
	Secrets *[]WorkflowSecretSummary `json:"secrets,omitempty"`
	State   WorkflowRunState         `json:"state"`
}

// NewWorkflowRunAllOf instantiates a new WorkflowRunAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowRunAllOf(revision WorkflowRevisionSummary, state WorkflowRunState) *WorkflowRunAllOf {
	this := WorkflowRunAllOf{}
	this.Revision = revision
	this.State = state
	return &this
}

// NewWorkflowRunAllOfWithDefaults instantiates a new WorkflowRunAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowRunAllOfWithDefaults() *WorkflowRunAllOf {
	this := WorkflowRunAllOf{}
	return &this
}

// GetConnections returns the Connections field value if set, zero value otherwise.
func (o *WorkflowRunAllOf) GetConnections() []ConnectionReference {
	if o == nil || o.Connections == nil {
		var ret []ConnectionReference
		return ret
	}
	return *o.Connections
}

// GetConnectionsOk returns a tuple with the Connections field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowRunAllOf) GetConnectionsOk() (*[]ConnectionReference, bool) {
	if o == nil || o.Connections == nil {
		return nil, false
	}
	return o.Connections, true
}

// HasConnections returns a boolean if a field has been set.
func (o *WorkflowRunAllOf) HasConnections() bool {
	if o != nil && o.Connections != nil {
		return true
	}

	return false
}

// SetConnections gets a reference to the given []ConnectionReference and assigns it to the Connections field.
func (o *WorkflowRunAllOf) SetConnections(v []ConnectionReference) {
	o.Connections = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *WorkflowRunAllOf) GetError() Error {
	if o == nil || o.Error == nil {
		var ret Error
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowRunAllOf) GetErrorOk() (*Error, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *WorkflowRunAllOf) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given Error and assigns it to the Error field.
func (o *WorkflowRunAllOf) SetError(v Error) {
	o.Error = &v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *WorkflowRunAllOf) GetParameters() map[string]WorkflowRunParameter {
	if o == nil || o.Parameters == nil {
		var ret map[string]WorkflowRunParameter
		return ret
	}
	return *o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowRunAllOf) GetParametersOk() (*map[string]WorkflowRunParameter, bool) {
	if o == nil || o.Parameters == nil {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *WorkflowRunAllOf) HasParameters() bool {
	if o != nil && o.Parameters != nil {
		return true
	}

	return false
}

// SetParameters gets a reference to the given map[string]WorkflowRunParameter and assigns it to the Parameters field.
func (o *WorkflowRunAllOf) SetParameters(v map[string]WorkflowRunParameter) {
	o.Parameters = &v
}

// GetRevision returns the Revision field value
func (o *WorkflowRunAllOf) GetRevision() WorkflowRevisionSummary {
	if o == nil {
		var ret WorkflowRevisionSummary
		return ret
	}

	return o.Revision
}

// GetRevisionOk returns a tuple with the Revision field value
// and a boolean to check if the value has been set.
func (o *WorkflowRunAllOf) GetRevisionOk() (*WorkflowRevisionSummary, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Revision, true
}

// SetRevision sets field value
func (o *WorkflowRunAllOf) SetRevision(v WorkflowRevisionSummary) {
	o.Revision = v
}

// GetSecrets returns the Secrets field value if set, zero value otherwise.
func (o *WorkflowRunAllOf) GetSecrets() []WorkflowSecretSummary {
	if o == nil || o.Secrets == nil {
		var ret []WorkflowSecretSummary
		return ret
	}
	return *o.Secrets
}

// GetSecretsOk returns a tuple with the Secrets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowRunAllOf) GetSecretsOk() (*[]WorkflowSecretSummary, bool) {
	if o == nil || o.Secrets == nil {
		return nil, false
	}
	return o.Secrets, true
}

// HasSecrets returns a boolean if a field has been set.
func (o *WorkflowRunAllOf) HasSecrets() bool {
	if o != nil && o.Secrets != nil {
		return true
	}

	return false
}

// SetSecrets gets a reference to the given []WorkflowSecretSummary and assigns it to the Secrets field.
func (o *WorkflowRunAllOf) SetSecrets(v []WorkflowSecretSummary) {
	o.Secrets = &v
}

// GetState returns the State field value
func (o *WorkflowRunAllOf) GetState() WorkflowRunState {
	if o == nil {
		var ret WorkflowRunState
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *WorkflowRunAllOf) GetStateOk() (*WorkflowRunState, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *WorkflowRunAllOf) SetState(v WorkflowRunState) {
	o.State = v
}

func (o WorkflowRunAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Connections != nil {
		toSerialize["connections"] = o.Connections
	}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	if o.Parameters != nil {
		toSerialize["parameters"] = o.Parameters
	}
	if true {
		toSerialize["revision"] = o.Revision
	}
	if o.Secrets != nil {
		toSerialize["secrets"] = o.Secrets
	}
	if true {
		toSerialize["state"] = o.State
	}
	return json.Marshal(toSerialize)
}

type NullableWorkflowRunAllOf struct {
	value *WorkflowRunAllOf
	isSet bool
}

func (v NullableWorkflowRunAllOf) Get() *WorkflowRunAllOf {
	return v.value
}

func (v *NullableWorkflowRunAllOf) Set(val *WorkflowRunAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowRunAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowRunAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowRunAllOf(val *WorkflowRunAllOf) *NullableWorkflowRunAllOf {
	return &NullableWorkflowRunAllOf{value: val, isSet: true}
}

func (v NullableWorkflowRunAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowRunAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
