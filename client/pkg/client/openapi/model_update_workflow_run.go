/*
 * Relay API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v20200615
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UpdateWorkflowRun struct for UpdateWorkflowRun
type UpdateWorkflowRun struct {
	Operation *WorkflowRunOperation `json:"operation,omitempty"`
}

// NewUpdateWorkflowRun instantiates a new UpdateWorkflowRun object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateWorkflowRun() *UpdateWorkflowRun {
	this := UpdateWorkflowRun{}
	return &this
}

// NewUpdateWorkflowRunWithDefaults instantiates a new UpdateWorkflowRun object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateWorkflowRunWithDefaults() *UpdateWorkflowRun {
	this := UpdateWorkflowRun{}
	return &this
}

// GetOperation returns the Operation field value if set, zero value otherwise.
func (o *UpdateWorkflowRun) GetOperation() WorkflowRunOperation {
	if o == nil || o.Operation == nil {
		var ret WorkflowRunOperation
		return ret
	}
	return *o.Operation
}

// GetOperationOk returns a tuple with the Operation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateWorkflowRun) GetOperationOk() (*WorkflowRunOperation, bool) {
	if o == nil || o.Operation == nil {
		return nil, false
	}
	return o.Operation, true
}

// HasOperation returns a boolean if a field has been set.
func (o *UpdateWorkflowRun) HasOperation() bool {
	if o != nil && o.Operation != nil {
		return true
	}

	return false
}

// SetOperation gets a reference to the given WorkflowRunOperation and assigns it to the Operation field.
func (o *UpdateWorkflowRun) SetOperation(v WorkflowRunOperation) {
	o.Operation = &v
}

func (o UpdateWorkflowRun) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Operation != nil {
		toSerialize["operation"] = o.Operation
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateWorkflowRun struct {
	value *UpdateWorkflowRun
	isSet bool
}

func (v NullableUpdateWorkflowRun) Get() *UpdateWorkflowRun {
	return v.value
}

func (v *NullableUpdateWorkflowRun) Set(val *UpdateWorkflowRun) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateWorkflowRun) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateWorkflowRun) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateWorkflowRun(val *UpdateWorkflowRun) *NullableUpdateWorkflowRun {
	return &NullableUpdateWorkflowRun{value: val, isSet: true}
}

func (v NullableUpdateWorkflowRun) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateWorkflowRun) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


