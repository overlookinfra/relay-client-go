/*
Relay API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v20200615
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GetConnectionProvider200ResponseAllOf The response type for retrieving a connection provider
type GetConnectionProvider200ResponseAllOf struct {
	Connection *ConnectionProvider `json:"connection,omitempty"`
}

// NewGetConnectionProvider200ResponseAllOf instantiates a new GetConnectionProvider200ResponseAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetConnectionProvider200ResponseAllOf() *GetConnectionProvider200ResponseAllOf {
	this := GetConnectionProvider200ResponseAllOf{}
	return &this
}

// NewGetConnectionProvider200ResponseAllOfWithDefaults instantiates a new GetConnectionProvider200ResponseAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetConnectionProvider200ResponseAllOfWithDefaults() *GetConnectionProvider200ResponseAllOf {
	this := GetConnectionProvider200ResponseAllOf{}
	return &this
}

// GetConnection returns the Connection field value if set, zero value otherwise.
func (o *GetConnectionProvider200ResponseAllOf) GetConnection() ConnectionProvider {
	if o == nil || o.Connection == nil {
		var ret ConnectionProvider
		return ret
	}
	return *o.Connection
}

// GetConnectionOk returns a tuple with the Connection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetConnectionProvider200ResponseAllOf) GetConnectionOk() (*ConnectionProvider, bool) {
	if o == nil || o.Connection == nil {
		return nil, false
	}
	return o.Connection, true
}

// HasConnection returns a boolean if a field has been set.
func (o *GetConnectionProvider200ResponseAllOf) HasConnection() bool {
	if o != nil && o.Connection != nil {
		return true
	}

	return false
}

// SetConnection gets a reference to the given ConnectionProvider and assigns it to the Connection field.
func (o *GetConnectionProvider200ResponseAllOf) SetConnection(v ConnectionProvider) {
	o.Connection = &v
}

func (o GetConnectionProvider200ResponseAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Connection != nil {
		toSerialize["connection"] = o.Connection
	}
	return json.Marshal(toSerialize)
}

type NullableGetConnectionProvider200ResponseAllOf struct {
	value *GetConnectionProvider200ResponseAllOf
	isSet bool
}

func (v NullableGetConnectionProvider200ResponseAllOf) Get() *GetConnectionProvider200ResponseAllOf {
	return v.value
}

func (v *NullableGetConnectionProvider200ResponseAllOf) Set(val *GetConnectionProvider200ResponseAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableGetConnectionProvider200ResponseAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableGetConnectionProvider200ResponseAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetConnectionProvider200ResponseAllOf(val *GetConnectionProvider200ResponseAllOf) *NullableGetConnectionProvider200ResponseAllOf {
	return &NullableGetConnectionProvider200ResponseAllOf{value: val, isSet: true}
}

func (v NullableGetConnectionProvider200ResponseAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetConnectionProvider200ResponseAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
