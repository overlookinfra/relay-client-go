/*
 * Relay API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v20200615
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// AnyWorkflowRunStepState struct for AnyWorkflowRunStepState
type AnyWorkflowRunStepState struct {
	// Time at which the step execution ended
	EndedAt NullableTime `json:"ended_at,omitempty"`
	// Time at which step execution started
	StartedAt NullableTime `json:"started_at,omitempty"`
	// Workflow run step status
	Status string `json:"status"`
}

// NewAnyWorkflowRunStepState instantiates a new AnyWorkflowRunStepState object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAnyWorkflowRunStepState(status string) *AnyWorkflowRunStepState {
	this := AnyWorkflowRunStepState{}
	this.Status = status
	return &this
}

// NewAnyWorkflowRunStepStateWithDefaults instantiates a new AnyWorkflowRunStepState object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAnyWorkflowRunStepStateWithDefaults() *AnyWorkflowRunStepState {
	this := AnyWorkflowRunStepState{}
	return &this
}

// GetEndedAt returns the EndedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AnyWorkflowRunStepState) GetEndedAt() time.Time {
	if o == nil || o.EndedAt.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.EndedAt.Get()
}

// GetEndedAtOk returns a tuple with the EndedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AnyWorkflowRunStepState) GetEndedAtOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.EndedAt.Get(), o.EndedAt.IsSet()
}

// HasEndedAt returns a boolean if a field has been set.
func (o *AnyWorkflowRunStepState) HasEndedAt() bool {
	if o != nil && o.EndedAt.IsSet() {
		return true
	}

	return false
}

// SetEndedAt gets a reference to the given NullableTime and assigns it to the EndedAt field.
func (o *AnyWorkflowRunStepState) SetEndedAt(v time.Time) {
	o.EndedAt.Set(&v)
}
// SetEndedAtNil sets the value for EndedAt to be an explicit nil
func (o *AnyWorkflowRunStepState) SetEndedAtNil() {
	o.EndedAt.Set(nil)
}

// UnsetEndedAt ensures that no value is present for EndedAt, not even an explicit nil
func (o *AnyWorkflowRunStepState) UnsetEndedAt() {
	o.EndedAt.Unset()
}

// GetStartedAt returns the StartedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AnyWorkflowRunStepState) GetStartedAt() time.Time {
	if o == nil || o.StartedAt.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.StartedAt.Get()
}

// GetStartedAtOk returns a tuple with the StartedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AnyWorkflowRunStepState) GetStartedAtOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StartedAt.Get(), o.StartedAt.IsSet()
}

// HasStartedAt returns a boolean if a field has been set.
func (o *AnyWorkflowRunStepState) HasStartedAt() bool {
	if o != nil && o.StartedAt.IsSet() {
		return true
	}

	return false
}

// SetStartedAt gets a reference to the given NullableTime and assigns it to the StartedAt field.
func (o *AnyWorkflowRunStepState) SetStartedAt(v time.Time) {
	o.StartedAt.Set(&v)
}
// SetStartedAtNil sets the value for StartedAt to be an explicit nil
func (o *AnyWorkflowRunStepState) SetStartedAtNil() {
	o.StartedAt.Set(nil)
}

// UnsetStartedAt ensures that no value is present for StartedAt, not even an explicit nil
func (o *AnyWorkflowRunStepState) UnsetStartedAt() {
	o.StartedAt.Unset()
}

// GetStatus returns the Status field value
func (o *AnyWorkflowRunStepState) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *AnyWorkflowRunStepState) GetStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *AnyWorkflowRunStepState) SetStatus(v string) {
	o.Status = v
}

func (o AnyWorkflowRunStepState) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EndedAt.IsSet() {
		toSerialize["ended_at"] = o.EndedAt.Get()
	}
	if o.StartedAt.IsSet() {
		toSerialize["started_at"] = o.StartedAt.Get()
	}
	if true {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableAnyWorkflowRunStepState struct {
	value *AnyWorkflowRunStepState
	isSet bool
}

func (v NullableAnyWorkflowRunStepState) Get() *AnyWorkflowRunStepState {
	return v.value
}

func (v *NullableAnyWorkflowRunStepState) Set(val *AnyWorkflowRunStepState) {
	v.value = val
	v.isSet = true
}

func (v NullableAnyWorkflowRunStepState) IsSet() bool {
	return v.isSet
}

func (v *NullableAnyWorkflowRunStepState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAnyWorkflowRunStepState(val *AnyWorkflowRunStepState) *NullableAnyWorkflowRunStepState {
	return &NullableAnyWorkflowRunStepState{value: val, isSet: true}
}

func (v NullableAnyWorkflowRunStepState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAnyWorkflowRunStepState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


