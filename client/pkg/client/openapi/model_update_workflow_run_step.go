/*
 * Relay API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v20200615
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UpdateWorkflowRunStep A partial run step object that only updates the `approval` property
type UpdateWorkflowRunStep struct {
	Approval *string `json:"approval,omitempty"`
}

// NewUpdateWorkflowRunStep instantiates a new UpdateWorkflowRunStep object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateWorkflowRunStep() *UpdateWorkflowRunStep {
	this := UpdateWorkflowRunStep{}
	return &this
}

// NewUpdateWorkflowRunStepWithDefaults instantiates a new UpdateWorkflowRunStep object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateWorkflowRunStepWithDefaults() *UpdateWorkflowRunStep {
	this := UpdateWorkflowRunStep{}
	return &this
}

// GetApproval returns the Approval field value if set, zero value otherwise.
func (o *UpdateWorkflowRunStep) GetApproval() string {
	if o == nil || o.Approval == nil {
		var ret string
		return ret
	}
	return *o.Approval
}

// GetApprovalOk returns a tuple with the Approval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateWorkflowRunStep) GetApprovalOk() (*string, bool) {
	if o == nil || o.Approval == nil {
		return nil, false
	}
	return o.Approval, true
}

// HasApproval returns a boolean if a field has been set.
func (o *UpdateWorkflowRunStep) HasApproval() bool {
	if o != nil && o.Approval != nil {
		return true
	}

	return false
}

// SetApproval gets a reference to the given string and assigns it to the Approval field.
func (o *UpdateWorkflowRunStep) SetApproval(v string) {
	o.Approval = &v
}

func (o UpdateWorkflowRunStep) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Approval != nil {
		toSerialize["approval"] = o.Approval
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateWorkflowRunStep struct {
	value *UpdateWorkflowRunStep
	isSet bool
}

func (v NullableUpdateWorkflowRunStep) Get() *UpdateWorkflowRunStep {
	return v.value
}

func (v *NullableUpdateWorkflowRunStep) Set(val *UpdateWorkflowRunStep) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateWorkflowRunStep) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateWorkflowRunStep) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateWorkflowRunStep(val *UpdateWorkflowRunStep) *NullableUpdateWorkflowRunStep {
	return &NullableUpdateWorkflowRunStep{value: val, isSet: true}
}

func (v NullableUpdateWorkflowRunStep) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateWorkflowRunStep) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


