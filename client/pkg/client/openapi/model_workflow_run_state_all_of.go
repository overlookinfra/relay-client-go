/*
 * Relay API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v20200615
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// WorkflowRunStateAllOf The state of a workflow run
type WorkflowRunStateAllOf struct {
	// Status of individual run steps, indexed by name
	Steps *map[string]WorkflowRunStepState `json:"steps,omitempty"`
}

// NewWorkflowRunStateAllOf instantiates a new WorkflowRunStateAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowRunStateAllOf() *WorkflowRunStateAllOf {
	this := WorkflowRunStateAllOf{}
	return &this
}

// NewWorkflowRunStateAllOfWithDefaults instantiates a new WorkflowRunStateAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowRunStateAllOfWithDefaults() *WorkflowRunStateAllOf {
	this := WorkflowRunStateAllOf{}
	return &this
}

// GetSteps returns the Steps field value if set, zero value otherwise.
func (o *WorkflowRunStateAllOf) GetSteps() map[string]WorkflowRunStepState {
	if o == nil || o.Steps == nil {
		var ret map[string]WorkflowRunStepState
		return ret
	}
	return *o.Steps
}

// GetStepsOk returns a tuple with the Steps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowRunStateAllOf) GetStepsOk() (*map[string]WorkflowRunStepState, bool) {
	if o == nil || o.Steps == nil {
		return nil, false
	}
	return o.Steps, true
}

// HasSteps returns a boolean if a field has been set.
func (o *WorkflowRunStateAllOf) HasSteps() bool {
	if o != nil && o.Steps != nil {
		return true
	}

	return false
}

// SetSteps gets a reference to the given map[string]WorkflowRunStepState and assigns it to the Steps field.
func (o *WorkflowRunStateAllOf) SetSteps(v map[string]WorkflowRunStepState) {
	o.Steps = &v
}

func (o WorkflowRunStateAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Steps != nil {
		toSerialize["steps"] = o.Steps
	}
	return json.Marshal(toSerialize)
}

type NullableWorkflowRunStateAllOf struct {
	value *WorkflowRunStateAllOf
	isSet bool
}

func (v NullableWorkflowRunStateAllOf) Get() *WorkflowRunStateAllOf {
	return v.value
}

func (v *NullableWorkflowRunStateAllOf) Set(val *WorkflowRunStateAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowRunStateAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowRunStateAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowRunStateAllOf(val *WorkflowRunStateAllOf) *NullableWorkflowRunStateAllOf {
	return &NullableWorkflowRunStateAllOf{value: val, isSet: true}
}

func (v NullableWorkflowRunStateAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowRunStateAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


