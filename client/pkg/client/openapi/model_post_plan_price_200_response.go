/*
Relay API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v20200615
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PostPlanPrice200Response struct for PostPlanPrice200Response
type PostPlanPrice200Response struct {
	// URL user should be redirect to in order to complete checkout
	RedirectUrl *string `json:"redirect_url,omitempty"`
}

// NewPostPlanPrice200Response instantiates a new PostPlanPrice200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostPlanPrice200Response() *PostPlanPrice200Response {
	this := PostPlanPrice200Response{}
	return &this
}

// NewPostPlanPrice200ResponseWithDefaults instantiates a new PostPlanPrice200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostPlanPrice200ResponseWithDefaults() *PostPlanPrice200Response {
	this := PostPlanPrice200Response{}
	return &this
}

// GetRedirectUrl returns the RedirectUrl field value if set, zero value otherwise.
func (o *PostPlanPrice200Response) GetRedirectUrl() string {
	if o == nil || o.RedirectUrl == nil {
		var ret string
		return ret
	}
	return *o.RedirectUrl
}

// GetRedirectUrlOk returns a tuple with the RedirectUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostPlanPrice200Response) GetRedirectUrlOk() (*string, bool) {
	if o == nil || o.RedirectUrl == nil {
		return nil, false
	}
	return o.RedirectUrl, true
}

// HasRedirectUrl returns a boolean if a field has been set.
func (o *PostPlanPrice200Response) HasRedirectUrl() bool {
	if o != nil && o.RedirectUrl != nil {
		return true
	}

	return false
}

// SetRedirectUrl gets a reference to the given string and assigns it to the RedirectUrl field.
func (o *PostPlanPrice200Response) SetRedirectUrl(v string) {
	o.RedirectUrl = &v
}

func (o PostPlanPrice200Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RedirectUrl != nil {
		toSerialize["redirect_url"] = o.RedirectUrl
	}
	return json.Marshal(toSerialize)
}

type NullablePostPlanPrice200Response struct {
	value *PostPlanPrice200Response
	isSet bool
}

func (v NullablePostPlanPrice200Response) Get() *PostPlanPrice200Response {
	return v.value
}

func (v *NullablePostPlanPrice200Response) Set(val *PostPlanPrice200Response) {
	v.value = val
	v.isSet = true
}

func (v NullablePostPlanPrice200Response) IsSet() bool {
	return v.isSet
}

func (v *NullablePostPlanPrice200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostPlanPrice200Response(val *PostPlanPrice200Response) *NullablePostPlanPrice200Response {
	return &NullablePostPlanPrice200Response{value: val, isSet: true}
}

func (v NullablePostPlanPrice200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostPlanPrice200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
