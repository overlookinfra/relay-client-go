/*
 * Relay API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v20200615
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// WorkflowRunView struct for WorkflowRunView
type WorkflowRunView struct {
	// The sequential identifier for a single workflow run
	RunNumber int32 `json:"run_number"`
	Workflow WorkflowIdentifier `json:"workflow"`
	State WorkflowRunStateSummary `json:"state"`
}

// NewWorkflowRunView instantiates a new WorkflowRunView object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowRunView(runNumber int32, workflow WorkflowIdentifier, state WorkflowRunStateSummary) *WorkflowRunView {
	this := WorkflowRunView{}
	this.RunNumber = runNumber
	this.Workflow = workflow
	this.State = state
	return &this
}

// NewWorkflowRunViewWithDefaults instantiates a new WorkflowRunView object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowRunViewWithDefaults() *WorkflowRunView {
	this := WorkflowRunView{}
	return &this
}

// GetRunNumber returns the RunNumber field value
func (o *WorkflowRunView) GetRunNumber() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RunNumber
}

// GetRunNumberOk returns a tuple with the RunNumber field value
// and a boolean to check if the value has been set.
func (o *WorkflowRunView) GetRunNumberOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RunNumber, true
}

// SetRunNumber sets field value
func (o *WorkflowRunView) SetRunNumber(v int32) {
	o.RunNumber = v
}

// GetWorkflow returns the Workflow field value
func (o *WorkflowRunView) GetWorkflow() WorkflowIdentifier {
	if o == nil {
		var ret WorkflowIdentifier
		return ret
	}

	return o.Workflow
}

// GetWorkflowOk returns a tuple with the Workflow field value
// and a boolean to check if the value has been set.
func (o *WorkflowRunView) GetWorkflowOk() (*WorkflowIdentifier, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Workflow, true
}

// SetWorkflow sets field value
func (o *WorkflowRunView) SetWorkflow(v WorkflowIdentifier) {
	o.Workflow = v
}

// GetState returns the State field value
func (o *WorkflowRunView) GetState() WorkflowRunStateSummary {
	if o == nil {
		var ret WorkflowRunStateSummary
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *WorkflowRunView) GetStateOk() (*WorkflowRunStateSummary, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *WorkflowRunView) SetState(v WorkflowRunStateSummary) {
	o.State = v
}

func (o WorkflowRunView) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["run_number"] = o.RunNumber
	}
	if true {
		toSerialize["workflow"] = o.Workflow
	}
	if true {
		toSerialize["state"] = o.State
	}
	return json.Marshal(toSerialize)
}

type NullableWorkflowRunView struct {
	value *WorkflowRunView
	isSet bool
}

func (v NullableWorkflowRunView) Get() *WorkflowRunView {
	return v.value
}

func (v *NullableWorkflowRunView) Set(val *WorkflowRunView) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowRunView) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowRunView) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowRunView(val *WorkflowRunView) *NullableWorkflowRunView {
	return &NullableWorkflowRunView{value: val, isSet: true}
}

func (v NullableWorkflowRunView) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowRunView) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


