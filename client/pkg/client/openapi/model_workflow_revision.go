/*
Relay API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v20200615
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// WorkflowRevision struct for WorkflowRevision
type WorkflowRevision struct {
	RevisionSource
	// An opaque revision identifier
	Id string `json:"id"`
	// Time of creation
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// A parsed representation of the declared parameters in a workflow yaml file
	Parameters *map[string]WorkflowParameter `json:"parameters,omitempty"`
	// Raw YAML representation of the yaml
	Raw string `json:"raw"`
	// A list of parsed information about workflow steps
	Steps []WorkflowStep `json:"steps"`
	// The list of triggers defined in this revision
	Triggers []WorkflowTrigger `json:"triggers"`
}

// NewWorkflowRevision instantiates a new WorkflowRevision object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowRevision(id string, raw string, steps []WorkflowStep, triggers []WorkflowTrigger) *WorkflowRevision {
	this := WorkflowRevision{}
	this.Id = id
	this.Raw = raw
	this.Steps = steps
	this.Triggers = triggers
	return &this
}

// NewWorkflowRevisionWithDefaults instantiates a new WorkflowRevision object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowRevisionWithDefaults() *WorkflowRevision {
	this := WorkflowRevision{}
	return &this
}

// GetId returns the Id field value
func (o *WorkflowRevision) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *WorkflowRevision) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *WorkflowRevision) SetId(v string) {
	o.Id = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *WorkflowRevision) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowRevision) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *WorkflowRevision) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *WorkflowRevision) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *WorkflowRevision) GetParameters() map[string]WorkflowParameter {
	if o == nil || o.Parameters == nil {
		var ret map[string]WorkflowParameter
		return ret
	}
	return *o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowRevision) GetParametersOk() (*map[string]WorkflowParameter, bool) {
	if o == nil || o.Parameters == nil {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *WorkflowRevision) HasParameters() bool {
	if o != nil && o.Parameters != nil {
		return true
	}

	return false
}

// SetParameters gets a reference to the given map[string]WorkflowParameter and assigns it to the Parameters field.
func (o *WorkflowRevision) SetParameters(v map[string]WorkflowParameter) {
	o.Parameters = &v
}

// GetRaw returns the Raw field value
func (o *WorkflowRevision) GetRaw() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Raw
}

// GetRawOk returns a tuple with the Raw field value
// and a boolean to check if the value has been set.
func (o *WorkflowRevision) GetRawOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Raw, true
}

// SetRaw sets field value
func (o *WorkflowRevision) SetRaw(v string) {
	o.Raw = v
}

// GetSteps returns the Steps field value
func (o *WorkflowRevision) GetSteps() []WorkflowStep {
	if o == nil {
		var ret []WorkflowStep
		return ret
	}

	return o.Steps
}

// GetStepsOk returns a tuple with the Steps field value
// and a boolean to check if the value has been set.
func (o *WorkflowRevision) GetStepsOk() ([]WorkflowStep, bool) {
	if o == nil {
		return nil, false
	}
	return o.Steps, true
}

// SetSteps sets field value
func (o *WorkflowRevision) SetSteps(v []WorkflowStep) {
	o.Steps = v
}

// GetTriggers returns the Triggers field value
func (o *WorkflowRevision) GetTriggers() []WorkflowTrigger {
	if o == nil {
		var ret []WorkflowTrigger
		return ret
	}

	return o.Triggers
}

// GetTriggersOk returns a tuple with the Triggers field value
// and a boolean to check if the value has been set.
func (o *WorkflowRevision) GetTriggersOk() ([]WorkflowTrigger, bool) {
	if o == nil {
		return nil, false
	}
	return o.Triggers, true
}

// SetTriggers sets field value
func (o *WorkflowRevision) SetTriggers(v []WorkflowTrigger) {
	o.Triggers = v
}

func (o WorkflowRevision) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedRevisionSource, errRevisionSource := json.Marshal(o.RevisionSource)
	if errRevisionSource != nil {
		return []byte{}, errRevisionSource
	}
	errRevisionSource = json.Unmarshal([]byte(serializedRevisionSource), &toSerialize)
	if errRevisionSource != nil {
		return []byte{}, errRevisionSource
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.Parameters != nil {
		toSerialize["parameters"] = o.Parameters
	}
	if true {
		toSerialize["raw"] = o.Raw
	}
	if true {
		toSerialize["steps"] = o.Steps
	}
	if true {
		toSerialize["triggers"] = o.Triggers
	}
	return json.Marshal(toSerialize)
}

type NullableWorkflowRevision struct {
	value *WorkflowRevision
	isSet bool
}

func (v NullableWorkflowRevision) Get() *WorkflowRevision {
	return v.value
}

func (v *NullableWorkflowRevision) Set(val *WorkflowRevision) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowRevision) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowRevision) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowRevision(val *WorkflowRevision) *NullableWorkflowRevision {
	return &NullableWorkflowRevision{value: val, isSet: true}
}

func (v NullableWorkflowRevision) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowRevision) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
