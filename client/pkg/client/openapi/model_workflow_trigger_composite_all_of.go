/*
Relay API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v20200615
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// WorkflowTriggerCompositeAllOf A workflow trigger composite object that includes the trigger definition and state
type WorkflowTriggerCompositeAllOf struct {
	State   WorkflowTriggerState `json:"state"`
	Trigger WorkflowTrigger      `json:"trigger"`
}

// NewWorkflowTriggerCompositeAllOf instantiates a new WorkflowTriggerCompositeAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowTriggerCompositeAllOf(state WorkflowTriggerState, trigger WorkflowTrigger) *WorkflowTriggerCompositeAllOf {
	this := WorkflowTriggerCompositeAllOf{}
	this.State = state
	this.Trigger = trigger
	return &this
}

// NewWorkflowTriggerCompositeAllOfWithDefaults instantiates a new WorkflowTriggerCompositeAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowTriggerCompositeAllOfWithDefaults() *WorkflowTriggerCompositeAllOf {
	this := WorkflowTriggerCompositeAllOf{}
	return &this
}

// GetState returns the State field value
func (o *WorkflowTriggerCompositeAllOf) GetState() WorkflowTriggerState {
	if o == nil {
		var ret WorkflowTriggerState
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *WorkflowTriggerCompositeAllOf) GetStateOk() (*WorkflowTriggerState, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *WorkflowTriggerCompositeAllOf) SetState(v WorkflowTriggerState) {
	o.State = v
}

// GetTrigger returns the Trigger field value
func (o *WorkflowTriggerCompositeAllOf) GetTrigger() WorkflowTrigger {
	if o == nil {
		var ret WorkflowTrigger
		return ret
	}

	return o.Trigger
}

// GetTriggerOk returns a tuple with the Trigger field value
// and a boolean to check if the value has been set.
func (o *WorkflowTriggerCompositeAllOf) GetTriggerOk() (*WorkflowTrigger, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Trigger, true
}

// SetTrigger sets field value
func (o *WorkflowTriggerCompositeAllOf) SetTrigger(v WorkflowTrigger) {
	o.Trigger = v
}

func (o WorkflowTriggerCompositeAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["state"] = o.State
	}
	if true {
		toSerialize["trigger"] = o.Trigger
	}
	return json.Marshal(toSerialize)
}

type NullableWorkflowTriggerCompositeAllOf struct {
	value *WorkflowTriggerCompositeAllOf
	isSet bool
}

func (v NullableWorkflowTriggerCompositeAllOf) Get() *WorkflowTriggerCompositeAllOf {
	return v.value
}

func (v *NullableWorkflowTriggerCompositeAllOf) Set(val *WorkflowTriggerCompositeAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowTriggerCompositeAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowTriggerCompositeAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowTriggerCompositeAllOf(val *WorkflowTriggerCompositeAllOf) *NullableWorkflowTriggerCompositeAllOf {
	return &NullableWorkflowTriggerCompositeAllOf{value: val, isSet: true}
}

func (v NullableWorkflowTriggerCompositeAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowTriggerCompositeAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
