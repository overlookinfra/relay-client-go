/*
Relay API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v20200615
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// SpecValidationWorkflowRunStepMessage struct for SpecValidationWorkflowRunStepMessage
type SpecValidationWorkflowRunStepMessage struct {
	// The long-form content of the message
	Details string `json:"details"`
	// The time the event occurred that generated this message
	ObservedAt time.Time `json:"observed_at"`
	// The severity of the message
	Severity string `json:"severity"`
	// A short summary of the message for use as a title
	Short *string `json:"short,omitempty"`
	// An expression evaluated by the backend
	Expression interface{} `json:"expression,omitempty"`
	// A JSON Pointer (RFC 6901) indicating the location of the validation problem
	Path *string `json:"path,omitempty"`
	// The JSON Schema relative to the path that produced the validation message
	Schema interface{} `json:"schema,omitempty"`
	// The type of message
	Type string `json:"type"`
}

// NewSpecValidationWorkflowRunStepMessage instantiates a new SpecValidationWorkflowRunStepMessage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpecValidationWorkflowRunStepMessage(details string, observedAt time.Time, severity string, type_ string) *SpecValidationWorkflowRunStepMessage {
	this := SpecValidationWorkflowRunStepMessage{}
	this.Details = details
	this.ObservedAt = observedAt
	this.Severity = severity
	this.Type = type_
	return &this
}

// NewSpecValidationWorkflowRunStepMessageWithDefaults instantiates a new SpecValidationWorkflowRunStepMessage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpecValidationWorkflowRunStepMessageWithDefaults() *SpecValidationWorkflowRunStepMessage {
	this := SpecValidationWorkflowRunStepMessage{}
	return &this
}

// GetDetails returns the Details field value
func (o *SpecValidationWorkflowRunStepMessage) GetDetails() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Details
}

// GetDetailsOk returns a tuple with the Details field value
// and a boolean to check if the value has been set.
func (o *SpecValidationWorkflowRunStepMessage) GetDetailsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Details, true
}

// SetDetails sets field value
func (o *SpecValidationWorkflowRunStepMessage) SetDetails(v string) {
	o.Details = v
}

// GetObservedAt returns the ObservedAt field value
func (o *SpecValidationWorkflowRunStepMessage) GetObservedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ObservedAt
}

// GetObservedAtOk returns a tuple with the ObservedAt field value
// and a boolean to check if the value has been set.
func (o *SpecValidationWorkflowRunStepMessage) GetObservedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObservedAt, true
}

// SetObservedAt sets field value
func (o *SpecValidationWorkflowRunStepMessage) SetObservedAt(v time.Time) {
	o.ObservedAt = v
}

// GetSeverity returns the Severity field value
func (o *SpecValidationWorkflowRunStepMessage) GetSeverity() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value
// and a boolean to check if the value has been set.
func (o *SpecValidationWorkflowRunStepMessage) GetSeverityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Severity, true
}

// SetSeverity sets field value
func (o *SpecValidationWorkflowRunStepMessage) SetSeverity(v string) {
	o.Severity = v
}

// GetShort returns the Short field value if set, zero value otherwise.
func (o *SpecValidationWorkflowRunStepMessage) GetShort() string {
	if o == nil || o.Short == nil {
		var ret string
		return ret
	}
	return *o.Short
}

// GetShortOk returns a tuple with the Short field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpecValidationWorkflowRunStepMessage) GetShortOk() (*string, bool) {
	if o == nil || o.Short == nil {
		return nil, false
	}
	return o.Short, true
}

// HasShort returns a boolean if a field has been set.
func (o *SpecValidationWorkflowRunStepMessage) HasShort() bool {
	if o != nil && o.Short != nil {
		return true
	}

	return false
}

// SetShort gets a reference to the given string and assigns it to the Short field.
func (o *SpecValidationWorkflowRunStepMessage) SetShort(v string) {
	o.Short = &v
}

// GetExpression returns the Expression field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SpecValidationWorkflowRunStepMessage) GetExpression() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Expression
}

// GetExpressionOk returns a tuple with the Expression field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SpecValidationWorkflowRunStepMessage) GetExpressionOk() (*interface{}, bool) {
	if o == nil || o.Expression == nil {
		return nil, false
	}
	return &o.Expression, true
}

// HasExpression returns a boolean if a field has been set.
func (o *SpecValidationWorkflowRunStepMessage) HasExpression() bool {
	if o != nil && o.Expression != nil {
		return true
	}

	return false
}

// SetExpression gets a reference to the given interface{} and assigns it to the Expression field.
func (o *SpecValidationWorkflowRunStepMessage) SetExpression(v interface{}) {
	o.Expression = v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *SpecValidationWorkflowRunStepMessage) GetPath() string {
	if o == nil || o.Path == nil {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpecValidationWorkflowRunStepMessage) GetPathOk() (*string, bool) {
	if o == nil || o.Path == nil {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *SpecValidationWorkflowRunStepMessage) HasPath() bool {
	if o != nil && o.Path != nil {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *SpecValidationWorkflowRunStepMessage) SetPath(v string) {
	o.Path = &v
}

// GetSchema returns the Schema field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SpecValidationWorkflowRunStepMessage) GetSchema() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Schema
}

// GetSchemaOk returns a tuple with the Schema field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SpecValidationWorkflowRunStepMessage) GetSchemaOk() (*interface{}, bool) {
	if o == nil || o.Schema == nil {
		return nil, false
	}
	return &o.Schema, true
}

// HasSchema returns a boolean if a field has been set.
func (o *SpecValidationWorkflowRunStepMessage) HasSchema() bool {
	if o != nil && o.Schema != nil {
		return true
	}

	return false
}

// SetSchema gets a reference to the given interface{} and assigns it to the Schema field.
func (o *SpecValidationWorkflowRunStepMessage) SetSchema(v interface{}) {
	o.Schema = v
}

// GetType returns the Type field value
func (o *SpecValidationWorkflowRunStepMessage) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *SpecValidationWorkflowRunStepMessage) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *SpecValidationWorkflowRunStepMessage) SetType(v string) {
	o.Type = v
}

func (o SpecValidationWorkflowRunStepMessage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["details"] = o.Details
	}
	if true {
		toSerialize["observed_at"] = o.ObservedAt
	}
	if true {
		toSerialize["severity"] = o.Severity
	}
	if o.Short != nil {
		toSerialize["short"] = o.Short
	}
	if o.Expression != nil {
		toSerialize["expression"] = o.Expression
	}
	if o.Path != nil {
		toSerialize["path"] = o.Path
	}
	if o.Schema != nil {
		toSerialize["schema"] = o.Schema
	}
	if true {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableSpecValidationWorkflowRunStepMessage struct {
	value *SpecValidationWorkflowRunStepMessage
	isSet bool
}

func (v NullableSpecValidationWorkflowRunStepMessage) Get() *SpecValidationWorkflowRunStepMessage {
	return v.value
}

func (v *NullableSpecValidationWorkflowRunStepMessage) Set(val *SpecValidationWorkflowRunStepMessage) {
	v.value = val
	v.isSet = true
}

func (v NullableSpecValidationWorkflowRunStepMessage) IsSet() bool {
	return v.isSet
}

func (v *NullableSpecValidationWorkflowRunStepMessage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpecValidationWorkflowRunStepMessage(val *SpecValidationWorkflowRunStepMessage) *NullableSpecValidationWorkflowRunStepMessage {
	return &NullableSpecValidationWorkflowRunStepMessage{value: val, isSet: true}
}

func (v NullableSpecValidationWorkflowRunStepMessage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpecValidationWorkflowRunStepMessage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
