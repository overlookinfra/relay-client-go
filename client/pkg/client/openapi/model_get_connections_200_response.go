/*
Relay API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v20200615
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GetConnections200Response struct for GetConnections200Response
type GetConnections200Response struct {
	Access *EntityAccess `json:"access,omitempty"`
	// A list of external connections
	Connections []Connection `json:"connections,omitempty"`
}

// NewGetConnections200Response instantiates a new GetConnections200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetConnections200Response() *GetConnections200Response {
	this := GetConnections200Response{}
	return &this
}

// NewGetConnections200ResponseWithDefaults instantiates a new GetConnections200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetConnections200ResponseWithDefaults() *GetConnections200Response {
	this := GetConnections200Response{}
	return &this
}

// GetAccess returns the Access field value if set, zero value otherwise.
func (o *GetConnections200Response) GetAccess() EntityAccess {
	if o == nil || o.Access == nil {
		var ret EntityAccess
		return ret
	}
	return *o.Access
}

// GetAccessOk returns a tuple with the Access field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetConnections200Response) GetAccessOk() (*EntityAccess, bool) {
	if o == nil || o.Access == nil {
		return nil, false
	}
	return o.Access, true
}

// HasAccess returns a boolean if a field has been set.
func (o *GetConnections200Response) HasAccess() bool {
	if o != nil && o.Access != nil {
		return true
	}

	return false
}

// SetAccess gets a reference to the given EntityAccess and assigns it to the Access field.
func (o *GetConnections200Response) SetAccess(v EntityAccess) {
	o.Access = &v
}

// GetConnections returns the Connections field value if set, zero value otherwise.
func (o *GetConnections200Response) GetConnections() []Connection {
	if o == nil || o.Connections == nil {
		var ret []Connection
		return ret
	}
	return o.Connections
}

// GetConnectionsOk returns a tuple with the Connections field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetConnections200Response) GetConnectionsOk() ([]Connection, bool) {
	if o == nil || o.Connections == nil {
		return nil, false
	}
	return o.Connections, true
}

// HasConnections returns a boolean if a field has been set.
func (o *GetConnections200Response) HasConnections() bool {
	if o != nil && o.Connections != nil {
		return true
	}

	return false
}

// SetConnections gets a reference to the given []Connection and assigns it to the Connections field.
func (o *GetConnections200Response) SetConnections(v []Connection) {
	o.Connections = v
}

func (o GetConnections200Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Access != nil {
		toSerialize["access"] = o.Access
	}
	if o.Connections != nil {
		toSerialize["connections"] = o.Connections
	}
	return json.Marshal(toSerialize)
}

type NullableGetConnections200Response struct {
	value *GetConnections200Response
	isSet bool
}

func (v NullableGetConnections200Response) Get() *GetConnections200Response {
	return v.value
}

func (v *NullableGetConnections200Response) Set(val *GetConnections200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetConnections200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetConnections200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetConnections200Response(val *GetConnections200Response) *NullableGetConnections200Response {
	return &NullableGetConnections200Response{value: val, isSet: true}
}

func (v NullableGetConnections200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetConnections200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
