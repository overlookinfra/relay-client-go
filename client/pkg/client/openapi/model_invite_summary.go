/*
Relay API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v20200615
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InviteSummary struct for InviteSummary
type InviteSummary struct {
	// The unique identifier of this invite
	Id string `json:"id"`
	// The email address of the invitee
	Email string `json:"email"`
	// The full name of the invitee
	Name string `json:"name"`
}

// NewInviteSummary instantiates a new InviteSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInviteSummary(id string, email string, name string) *InviteSummary {
	this := InviteSummary{}
	this.Id = id
	this.Email = email
	this.Name = name
	return &this
}

// NewInviteSummaryWithDefaults instantiates a new InviteSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInviteSummaryWithDefaults() *InviteSummary {
	this := InviteSummary{}
	return &this
}

// GetId returns the Id field value
func (o *InviteSummary) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *InviteSummary) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *InviteSummary) SetId(v string) {
	o.Id = v
}

// GetEmail returns the Email field value
func (o *InviteSummary) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *InviteSummary) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *InviteSummary) SetEmail(v string) {
	o.Email = v
}

// GetName returns the Name field value
func (o *InviteSummary) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *InviteSummary) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *InviteSummary) SetName(v string) {
	o.Name = v
}

func (o InviteSummary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["email"] = o.Email
	}
	if true {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableInviteSummary struct {
	value *InviteSummary
	isSet bool
}

func (v NullableInviteSummary) Get() *InviteSummary {
	return v.value
}

func (v *NullableInviteSummary) Set(val *InviteSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableInviteSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableInviteSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInviteSummary(val *InviteSummary) *NullableInviteSummary {
	return &NullableInviteSummary{value: val, isSet: true}
}

func (v NullableInviteSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInviteSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
