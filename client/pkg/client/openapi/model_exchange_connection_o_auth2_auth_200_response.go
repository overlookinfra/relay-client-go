/*
Relay API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v20200615
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ExchangeConnectionOAuth2Auth200Response struct for ExchangeConnectionOAuth2Auth200Response
type ExchangeConnectionOAuth2Auth200Response struct {
	Access     *EntityAccess                    `json:"access,omitempty"`
	Connection *ConnectionWithDisplayOnceFields `json:"connection,omitempty"`
	// The original state information from the authentication request
	State interface{} `json:"state,omitempty"`
}

// NewExchangeConnectionOAuth2Auth200Response instantiates a new ExchangeConnectionOAuth2Auth200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExchangeConnectionOAuth2Auth200Response() *ExchangeConnectionOAuth2Auth200Response {
	this := ExchangeConnectionOAuth2Auth200Response{}
	return &this
}

// NewExchangeConnectionOAuth2Auth200ResponseWithDefaults instantiates a new ExchangeConnectionOAuth2Auth200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExchangeConnectionOAuth2Auth200ResponseWithDefaults() *ExchangeConnectionOAuth2Auth200Response {
	this := ExchangeConnectionOAuth2Auth200Response{}
	return &this
}

// GetAccess returns the Access field value if set, zero value otherwise.
func (o *ExchangeConnectionOAuth2Auth200Response) GetAccess() EntityAccess {
	if o == nil || o.Access == nil {
		var ret EntityAccess
		return ret
	}
	return *o.Access
}

// GetAccessOk returns a tuple with the Access field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExchangeConnectionOAuth2Auth200Response) GetAccessOk() (*EntityAccess, bool) {
	if o == nil || o.Access == nil {
		return nil, false
	}
	return o.Access, true
}

// HasAccess returns a boolean if a field has been set.
func (o *ExchangeConnectionOAuth2Auth200Response) HasAccess() bool {
	if o != nil && o.Access != nil {
		return true
	}

	return false
}

// SetAccess gets a reference to the given EntityAccess and assigns it to the Access field.
func (o *ExchangeConnectionOAuth2Auth200Response) SetAccess(v EntityAccess) {
	o.Access = &v
}

// GetConnection returns the Connection field value if set, zero value otherwise.
func (o *ExchangeConnectionOAuth2Auth200Response) GetConnection() ConnectionWithDisplayOnceFields {
	if o == nil || o.Connection == nil {
		var ret ConnectionWithDisplayOnceFields
		return ret
	}
	return *o.Connection
}

// GetConnectionOk returns a tuple with the Connection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExchangeConnectionOAuth2Auth200Response) GetConnectionOk() (*ConnectionWithDisplayOnceFields, bool) {
	if o == nil || o.Connection == nil {
		return nil, false
	}
	return o.Connection, true
}

// HasConnection returns a boolean if a field has been set.
func (o *ExchangeConnectionOAuth2Auth200Response) HasConnection() bool {
	if o != nil && o.Connection != nil {
		return true
	}

	return false
}

// SetConnection gets a reference to the given ConnectionWithDisplayOnceFields and assigns it to the Connection field.
func (o *ExchangeConnectionOAuth2Auth200Response) SetConnection(v ConnectionWithDisplayOnceFields) {
	o.Connection = &v
}

// GetState returns the State field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExchangeConnectionOAuth2Auth200Response) GetState() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExchangeConnectionOAuth2Auth200Response) GetStateOk() (*interface{}, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return &o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *ExchangeConnectionOAuth2Auth200Response) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given interface{} and assigns it to the State field.
func (o *ExchangeConnectionOAuth2Auth200Response) SetState(v interface{}) {
	o.State = v
}

func (o ExchangeConnectionOAuth2Auth200Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Access != nil {
		toSerialize["access"] = o.Access
	}
	if o.Connection != nil {
		toSerialize["connection"] = o.Connection
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	return json.Marshal(toSerialize)
}

type NullableExchangeConnectionOAuth2Auth200Response struct {
	value *ExchangeConnectionOAuth2Auth200Response
	isSet bool
}

func (v NullableExchangeConnectionOAuth2Auth200Response) Get() *ExchangeConnectionOAuth2Auth200Response {
	return v.value
}

func (v *NullableExchangeConnectionOAuth2Auth200Response) Set(val *ExchangeConnectionOAuth2Auth200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableExchangeConnectionOAuth2Auth200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableExchangeConnectionOAuth2Auth200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExchangeConnectionOAuth2Auth200Response(val *ExchangeConnectionOAuth2Auth200Response) *NullableExchangeConnectionOAuth2Auth200Response {
	return &NullableExchangeConnectionOAuth2Auth200Response{value: val, isSet: true}
}

func (v NullableExchangeConnectionOAuth2Auth200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExchangeConnectionOAuth2Auth200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
