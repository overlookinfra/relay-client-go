/*
 * Relay API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v20200615
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PushWorkflowTriggerSourceState The state of a push trigger
type PushWorkflowTriggerSourceState struct {
	// The lifecycle status of this trigger
	Status string `json:"status"`
	// A JWT that allows events to be submitted to this trigger source
	Token string `json:"token"`
	// The type discriminator for this trigger source
	Type string `json:"type"`
}

// NewPushWorkflowTriggerSourceState instantiates a new PushWorkflowTriggerSourceState object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPushWorkflowTriggerSourceState(status string, token string, type_ string) *PushWorkflowTriggerSourceState {
	this := PushWorkflowTriggerSourceState{}
	this.Status = status
	this.Token = token
	this.Type = type_
	return &this
}

// NewPushWorkflowTriggerSourceStateWithDefaults instantiates a new PushWorkflowTriggerSourceState object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPushWorkflowTriggerSourceStateWithDefaults() *PushWorkflowTriggerSourceState {
	this := PushWorkflowTriggerSourceState{}
	return &this
}

// GetStatus returns the Status field value
func (o *PushWorkflowTriggerSourceState) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *PushWorkflowTriggerSourceState) GetStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *PushWorkflowTriggerSourceState) SetStatus(v string) {
	o.Status = v
}

// GetToken returns the Token field value
func (o *PushWorkflowTriggerSourceState) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *PushWorkflowTriggerSourceState) GetTokenOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *PushWorkflowTriggerSourceState) SetToken(v string) {
	o.Token = v
}

// GetType returns the Type field value
func (o *PushWorkflowTriggerSourceState) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *PushWorkflowTriggerSourceState) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *PushWorkflowTriggerSourceState) SetType(v string) {
	o.Type = v
}

func (o PushWorkflowTriggerSourceState) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["token"] = o.Token
	}
	if true {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullablePushWorkflowTriggerSourceState struct {
	value *PushWorkflowTriggerSourceState
	isSet bool
}

func (v NullablePushWorkflowTriggerSourceState) Get() *PushWorkflowTriggerSourceState {
	return v.value
}

func (v *NullablePushWorkflowTriggerSourceState) Set(val *PushWorkflowTriggerSourceState) {
	v.value = val
	v.isSet = true
}

func (v NullablePushWorkflowTriggerSourceState) IsSet() bool {
	return v.isSet
}

func (v *NullablePushWorkflowTriggerSourceState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePushWorkflowTriggerSourceState(val *PushWorkflowTriggerSourceState) *NullablePushWorkflowTriggerSourceState {
	return &NullablePushWorkflowTriggerSourceState{value: val, isSet: true}
}

func (v NullablePushWorkflowTriggerSourceState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePushWorkflowTriggerSourceState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


