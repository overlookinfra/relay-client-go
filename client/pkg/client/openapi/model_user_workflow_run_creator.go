/*
Relay API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v20200615
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UserWorkflowRunCreator A summary of the user that created a workflow run
type UserWorkflowRunCreator struct {
	// The type of creator
	Type string `json:"type"`
	User *UserSummary `json:"user,omitempty"`
}

// NewUserWorkflowRunCreator instantiates a new UserWorkflowRunCreator object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserWorkflowRunCreator(type_ string) *UserWorkflowRunCreator {
	this := UserWorkflowRunCreator{}
	this.Type = type_
	return &this
}

// NewUserWorkflowRunCreatorWithDefaults instantiates a new UserWorkflowRunCreator object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserWorkflowRunCreatorWithDefaults() *UserWorkflowRunCreator {
	this := UserWorkflowRunCreator{}
	return &this
}

// GetType returns the Type field value
func (o *UserWorkflowRunCreator) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *UserWorkflowRunCreator) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *UserWorkflowRunCreator) SetType(v string) {
	o.Type = v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *UserWorkflowRunCreator) GetUser() UserSummary {
	if o == nil || o.User == nil {
		var ret UserSummary
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserWorkflowRunCreator) GetUserOk() (*UserSummary, bool) {
	if o == nil || o.User == nil {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *UserWorkflowRunCreator) HasUser() bool {
	if o != nil && o.User != nil {
		return true
	}

	return false
}

// SetUser gets a reference to the given UserSummary and assigns it to the User field.
func (o *UserWorkflowRunCreator) SetUser(v UserSummary) {
	o.User = &v
}

func (o UserWorkflowRunCreator) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	if o.User != nil {
		toSerialize["user"] = o.User
	}
	return json.Marshal(toSerialize)
}

type NullableUserWorkflowRunCreator struct {
	value *UserWorkflowRunCreator
	isSet bool
}

func (v NullableUserWorkflowRunCreator) Get() *UserWorkflowRunCreator {
	return v.value
}

func (v *NullableUserWorkflowRunCreator) Set(val *UserWorkflowRunCreator) {
	v.value = val
	v.isSet = true
}

func (v NullableUserWorkflowRunCreator) IsSet() bool {
	return v.isSet
}

func (v *NullableUserWorkflowRunCreator) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserWorkflowRunCreator(val *UserWorkflowRunCreator) *NullableUserWorkflowRunCreator {
	return &NullableUserWorkflowRunCreator{value: val, isSet: true}
}

func (v NullableUserWorkflowRunCreator) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserWorkflowRunCreator) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


