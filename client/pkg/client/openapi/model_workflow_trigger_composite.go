/*
Relay API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v20200615
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// WorkflowTriggerComposite struct for WorkflowTriggerComposite
type WorkflowTriggerComposite struct {
	State   WorkflowTriggerState `json:"state"`
	Trigger WorkflowTrigger      `json:"trigger"`
}

// NewWorkflowTriggerComposite instantiates a new WorkflowTriggerComposite object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowTriggerComposite(state WorkflowTriggerState, trigger WorkflowTrigger) *WorkflowTriggerComposite {
	this := WorkflowTriggerComposite{}
	this.State = state
	this.Trigger = trigger
	return &this
}

// NewWorkflowTriggerCompositeWithDefaults instantiates a new WorkflowTriggerComposite object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowTriggerCompositeWithDefaults() *WorkflowTriggerComposite {
	this := WorkflowTriggerComposite{}
	return &this
}

// GetState returns the State field value
func (o *WorkflowTriggerComposite) GetState() WorkflowTriggerState {
	if o == nil {
		var ret WorkflowTriggerState
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *WorkflowTriggerComposite) GetStateOk() (*WorkflowTriggerState, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *WorkflowTriggerComposite) SetState(v WorkflowTriggerState) {
	o.State = v
}

// GetTrigger returns the Trigger field value
func (o *WorkflowTriggerComposite) GetTrigger() WorkflowTrigger {
	if o == nil {
		var ret WorkflowTrigger
		return ret
	}

	return o.Trigger
}

// GetTriggerOk returns a tuple with the Trigger field value
// and a boolean to check if the value has been set.
func (o *WorkflowTriggerComposite) GetTriggerOk() (*WorkflowTrigger, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Trigger, true
}

// SetTrigger sets field value
func (o *WorkflowTriggerComposite) SetTrigger(v WorkflowTrigger) {
	o.Trigger = v
}

func (o WorkflowTriggerComposite) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["state"] = o.State
	}
	if true {
		toSerialize["trigger"] = o.Trigger
	}
	return json.Marshal(toSerialize)
}

type NullableWorkflowTriggerComposite struct {
	value *WorkflowTriggerComposite
	isSet bool
}

func (v NullableWorkflowTriggerComposite) Get() *WorkflowTriggerComposite {
	return v.value
}

func (v *NullableWorkflowTriggerComposite) Set(val *WorkflowTriggerComposite) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowTriggerComposite) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowTriggerComposite) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowTriggerComposite(val *WorkflowTriggerComposite) *NullableWorkflowTriggerComposite {
	return &NullableWorkflowTriggerComposite{value: val, isSet: true}
}

func (v NullableWorkflowTriggerComposite) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowTriggerComposite) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
