/*
Relay API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v20200615
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GetInvite200ResponseAllOf The response type for retrieving an invite
type GetInvite200ResponseAllOf struct {
	Invite *Invite `json:"invite,omitempty"`
}

// NewGetInvite200ResponseAllOf instantiates a new GetInvite200ResponseAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetInvite200ResponseAllOf() *GetInvite200ResponseAllOf {
	this := GetInvite200ResponseAllOf{}
	return &this
}

// NewGetInvite200ResponseAllOfWithDefaults instantiates a new GetInvite200ResponseAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetInvite200ResponseAllOfWithDefaults() *GetInvite200ResponseAllOf {
	this := GetInvite200ResponseAllOf{}
	return &this
}

// GetInvite returns the Invite field value if set, zero value otherwise.
func (o *GetInvite200ResponseAllOf) GetInvite() Invite {
	if o == nil || o.Invite == nil {
		var ret Invite
		return ret
	}
	return *o.Invite
}

// GetInviteOk returns a tuple with the Invite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInvite200ResponseAllOf) GetInviteOk() (*Invite, bool) {
	if o == nil || o.Invite == nil {
		return nil, false
	}
	return o.Invite, true
}

// HasInvite returns a boolean if a field has been set.
func (o *GetInvite200ResponseAllOf) HasInvite() bool {
	if o != nil && o.Invite != nil {
		return true
	}

	return false
}

// SetInvite gets a reference to the given Invite and assigns it to the Invite field.
func (o *GetInvite200ResponseAllOf) SetInvite(v Invite) {
	o.Invite = &v
}

func (o GetInvite200ResponseAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Invite != nil {
		toSerialize["invite"] = o.Invite
	}
	return json.Marshal(toSerialize)
}

type NullableGetInvite200ResponseAllOf struct {
	value *GetInvite200ResponseAllOf
	isSet bool
}

func (v NullableGetInvite200ResponseAllOf) Get() *GetInvite200ResponseAllOf {
	return v.value
}

func (v *NullableGetInvite200ResponseAllOf) Set(val *GetInvite200ResponseAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableGetInvite200ResponseAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableGetInvite200ResponseAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetInvite200ResponseAllOf(val *GetInvite200ResponseAllOf) *NullableGetInvite200ResponseAllOf {
	return &NullableGetInvite200ResponseAllOf{value: val, isSet: true}
}

func (v NullableGetInvite200ResponseAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetInvite200ResponseAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
