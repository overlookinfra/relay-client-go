/*
Relay API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v20200615
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// WorkflowRunsSummary The list of workflow runs
type WorkflowRunsSummary struct {
	// A list of workflow run summaries
	Runs *[]WorkflowRunSummary `json:"runs,omitempty"`
}

// NewWorkflowRunsSummary instantiates a new WorkflowRunsSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowRunsSummary() *WorkflowRunsSummary {
	this := WorkflowRunsSummary{}
	return &this
}

// NewWorkflowRunsSummaryWithDefaults instantiates a new WorkflowRunsSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowRunsSummaryWithDefaults() *WorkflowRunsSummary {
	this := WorkflowRunsSummary{}
	return &this
}

// GetRuns returns the Runs field value if set, zero value otherwise.
func (o *WorkflowRunsSummary) GetRuns() []WorkflowRunSummary {
	if o == nil || o.Runs == nil {
		var ret []WorkflowRunSummary
		return ret
	}
	return *o.Runs
}

// GetRunsOk returns a tuple with the Runs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowRunsSummary) GetRunsOk() (*[]WorkflowRunSummary, bool) {
	if o == nil || o.Runs == nil {
		return nil, false
	}
	return o.Runs, true
}

// HasRuns returns a boolean if a field has been set.
func (o *WorkflowRunsSummary) HasRuns() bool {
	if o != nil && o.Runs != nil {
		return true
	}

	return false
}

// SetRuns gets a reference to the given []WorkflowRunSummary and assigns it to the Runs field.
func (o *WorkflowRunsSummary) SetRuns(v []WorkflowRunSummary) {
	o.Runs = &v
}

func (o WorkflowRunsSummary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Runs != nil {
		toSerialize["runs"] = o.Runs
	}
	return json.Marshal(toSerialize)
}

type NullableWorkflowRunsSummary struct {
	value *WorkflowRunsSummary
	isSet bool
}

func (v NullableWorkflowRunsSummary) Get() *WorkflowRunsSummary {
	return v.value
}

func (v *NullableWorkflowRunsSummary) Set(val *WorkflowRunsSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowRunsSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowRunsSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowRunsSummary(val *WorkflowRunsSummary) *NullableWorkflowRunsSummary {
	return &NullableWorkflowRunsSummary{value: val, isSet: true}
}

func (v NullableWorkflowRunsSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowRunsSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


