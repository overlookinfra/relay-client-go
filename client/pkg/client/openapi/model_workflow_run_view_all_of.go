/*
Relay API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v20200615
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// WorkflowRunViewAllOf A workflow run view used to show aggregated workflow data
type WorkflowRunViewAllOf struct {
	State WorkflowRunStateSummary `json:"state"`
}

// NewWorkflowRunViewAllOf instantiates a new WorkflowRunViewAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowRunViewAllOf(state WorkflowRunStateSummary) *WorkflowRunViewAllOf {
	this := WorkflowRunViewAllOf{}
	this.State = state
	return &this
}

// NewWorkflowRunViewAllOfWithDefaults instantiates a new WorkflowRunViewAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowRunViewAllOfWithDefaults() *WorkflowRunViewAllOf {
	this := WorkflowRunViewAllOf{}
	return &this
}

// GetState returns the State field value
func (o *WorkflowRunViewAllOf) GetState() WorkflowRunStateSummary {
	if o == nil {
		var ret WorkflowRunStateSummary
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *WorkflowRunViewAllOf) GetStateOk() (*WorkflowRunStateSummary, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *WorkflowRunViewAllOf) SetState(v WorkflowRunStateSummary) {
	o.State = v
}

func (o WorkflowRunViewAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["state"] = o.State
	}
	return json.Marshal(toSerialize)
}

type NullableWorkflowRunViewAllOf struct {
	value *WorkflowRunViewAllOf
	isSet bool
}

func (v NullableWorkflowRunViewAllOf) Get() *WorkflowRunViewAllOf {
	return v.value
}

func (v *NullableWorkflowRunViewAllOf) Set(val *WorkflowRunViewAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowRunViewAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowRunViewAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowRunViewAllOf(val *WorkflowRunViewAllOf) *NullableWorkflowRunViewAllOf {
	return &NullableWorkflowRunViewAllOf{value: val, isSet: true}
}

func (v NullableWorkflowRunViewAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowRunViewAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
