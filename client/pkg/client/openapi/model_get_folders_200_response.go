/*
Relay API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v20200615
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GetFolders200Response An object containing a list of folders
type GetFolders200Response struct {
	// A list of folders
	Folders []Folder `json:"folders,omitempty"`
}

// NewGetFolders200Response instantiates a new GetFolders200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetFolders200Response() *GetFolders200Response {
	this := GetFolders200Response{}
	return &this
}

// NewGetFolders200ResponseWithDefaults instantiates a new GetFolders200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetFolders200ResponseWithDefaults() *GetFolders200Response {
	this := GetFolders200Response{}
	return &this
}

// GetFolders returns the Folders field value if set, zero value otherwise.
func (o *GetFolders200Response) GetFolders() []Folder {
	if o == nil || o.Folders == nil {
		var ret []Folder
		return ret
	}
	return o.Folders
}

// GetFoldersOk returns a tuple with the Folders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFolders200Response) GetFoldersOk() ([]Folder, bool) {
	if o == nil || o.Folders == nil {
		return nil, false
	}
	return o.Folders, true
}

// HasFolders returns a boolean if a field has been set.
func (o *GetFolders200Response) HasFolders() bool {
	if o != nil && o.Folders != nil {
		return true
	}

	return false
}

// SetFolders gets a reference to the given []Folder and assigns it to the Folders field.
func (o *GetFolders200Response) SetFolders(v []Folder) {
	o.Folders = v
}

func (o GetFolders200Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Folders != nil {
		toSerialize["folders"] = o.Folders
	}
	return json.Marshal(toSerialize)
}

type NullableGetFolders200Response struct {
	value *GetFolders200Response
	isSet bool
}

func (v NullableGetFolders200Response) Get() *GetFolders200Response {
	return v.value
}

func (v *NullableGetFolders200Response) Set(val *GetFolders200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetFolders200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetFolders200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetFolders200Response(val *GetFolders200Response) *NullableGetFolders200Response {
	return &NullableGetFolders200Response{value: val, isSet: true}
}

func (v NullableGetFolders200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetFolders200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
