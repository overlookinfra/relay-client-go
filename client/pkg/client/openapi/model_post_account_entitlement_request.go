/*
Relay API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v20200615
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PostAccountEntitlementRequest The request type for creating or modifying an account entitlement subscription
type PostAccountEntitlementRequest struct {
	// Slug of desired plan for new account entitlement subscription/trial. Required when `trial_state` is `active` or `null`.
	PlanSlug *string `json:"plan_slug,omitempty"`
	// The requested `trial_state` for the given entitlement subscription: `active` means \"start a new trial\", `extended` means \"extend an existing trial\", `null` means \"no trial requested\" (account must be provisioned for payment)
	TrialState string `json:"trial_state"`
}

// NewPostAccountEntitlementRequest instantiates a new PostAccountEntitlementRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostAccountEntitlementRequest(trialState string) *PostAccountEntitlementRequest {
	this := PostAccountEntitlementRequest{}
	this.TrialState = trialState
	return &this
}

// NewPostAccountEntitlementRequestWithDefaults instantiates a new PostAccountEntitlementRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostAccountEntitlementRequestWithDefaults() *PostAccountEntitlementRequest {
	this := PostAccountEntitlementRequest{}
	return &this
}

// GetPlanSlug returns the PlanSlug field value if set, zero value otherwise.
func (o *PostAccountEntitlementRequest) GetPlanSlug() string {
	if o == nil || o.PlanSlug == nil {
		var ret string
		return ret
	}
	return *o.PlanSlug
}

// GetPlanSlugOk returns a tuple with the PlanSlug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostAccountEntitlementRequest) GetPlanSlugOk() (*string, bool) {
	if o == nil || o.PlanSlug == nil {
		return nil, false
	}
	return o.PlanSlug, true
}

// HasPlanSlug returns a boolean if a field has been set.
func (o *PostAccountEntitlementRequest) HasPlanSlug() bool {
	if o != nil && o.PlanSlug != nil {
		return true
	}

	return false
}

// SetPlanSlug gets a reference to the given string and assigns it to the PlanSlug field.
func (o *PostAccountEntitlementRequest) SetPlanSlug(v string) {
	o.PlanSlug = &v
}

// GetTrialState returns the TrialState field value
func (o *PostAccountEntitlementRequest) GetTrialState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TrialState
}

// GetTrialStateOk returns a tuple with the TrialState field value
// and a boolean to check if the value has been set.
func (o *PostAccountEntitlementRequest) GetTrialStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TrialState, true
}

// SetTrialState sets field value
func (o *PostAccountEntitlementRequest) SetTrialState(v string) {
	o.TrialState = v
}

func (o PostAccountEntitlementRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PlanSlug != nil {
		toSerialize["plan_slug"] = o.PlanSlug
	}
	if true {
		toSerialize["trial_state"] = o.TrialState
	}
	return json.Marshal(toSerialize)
}

type NullablePostAccountEntitlementRequest struct {
	value *PostAccountEntitlementRequest
	isSet bool
}

func (v NullablePostAccountEntitlementRequest) Get() *PostAccountEntitlementRequest {
	return v.value
}

func (v *NullablePostAccountEntitlementRequest) Set(val *PostAccountEntitlementRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostAccountEntitlementRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostAccountEntitlementRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostAccountEntitlementRequest(val *PostAccountEntitlementRequest) *NullablePostAccountEntitlementRequest {
	return &NullablePostAccountEntitlementRequest{value: val, isSet: true}
}

func (v NullablePostAccountEntitlementRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostAccountEntitlementRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
