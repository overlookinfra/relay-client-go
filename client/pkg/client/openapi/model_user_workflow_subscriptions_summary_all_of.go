/*
 * Relay API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v20200615
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UserWorkflowSubscriptionsSummaryAllOf User notification options for a workflow
type UserWorkflowSubscriptionsSummaryAllOf struct {
	Subscriptions *UserWorkflowSubscriptions `json:"subscriptions,omitempty"`
}

// NewUserWorkflowSubscriptionsSummaryAllOf instantiates a new UserWorkflowSubscriptionsSummaryAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserWorkflowSubscriptionsSummaryAllOf() *UserWorkflowSubscriptionsSummaryAllOf {
	this := UserWorkflowSubscriptionsSummaryAllOf{}
	return &this
}

// NewUserWorkflowSubscriptionsSummaryAllOfWithDefaults instantiates a new UserWorkflowSubscriptionsSummaryAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserWorkflowSubscriptionsSummaryAllOfWithDefaults() *UserWorkflowSubscriptionsSummaryAllOf {
	this := UserWorkflowSubscriptionsSummaryAllOf{}
	return &this
}

// GetSubscriptions returns the Subscriptions field value if set, zero value otherwise.
func (o *UserWorkflowSubscriptionsSummaryAllOf) GetSubscriptions() UserWorkflowSubscriptions {
	if o == nil || o.Subscriptions == nil {
		var ret UserWorkflowSubscriptions
		return ret
	}
	return *o.Subscriptions
}

// GetSubscriptionsOk returns a tuple with the Subscriptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserWorkflowSubscriptionsSummaryAllOf) GetSubscriptionsOk() (*UserWorkflowSubscriptions, bool) {
	if o == nil || o.Subscriptions == nil {
		return nil, false
	}
	return o.Subscriptions, true
}

// HasSubscriptions returns a boolean if a field has been set.
func (o *UserWorkflowSubscriptionsSummaryAllOf) HasSubscriptions() bool {
	if o != nil && o.Subscriptions != nil {
		return true
	}

	return false
}

// SetSubscriptions gets a reference to the given UserWorkflowSubscriptions and assigns it to the Subscriptions field.
func (o *UserWorkflowSubscriptionsSummaryAllOf) SetSubscriptions(v UserWorkflowSubscriptions) {
	o.Subscriptions = &v
}

func (o UserWorkflowSubscriptionsSummaryAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Subscriptions != nil {
		toSerialize["subscriptions"] = o.Subscriptions
	}
	return json.Marshal(toSerialize)
}

type NullableUserWorkflowSubscriptionsSummaryAllOf struct {
	value *UserWorkflowSubscriptionsSummaryAllOf
	isSet bool
}

func (v NullableUserWorkflowSubscriptionsSummaryAllOf) Get() *UserWorkflowSubscriptionsSummaryAllOf {
	return v.value
}

func (v *NullableUserWorkflowSubscriptionsSummaryAllOf) Set(val *UserWorkflowSubscriptionsSummaryAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableUserWorkflowSubscriptionsSummaryAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableUserWorkflowSubscriptionsSummaryAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserWorkflowSubscriptionsSummaryAllOf(val *UserWorkflowSubscriptionsSummaryAllOf) *NullableUserWorkflowSubscriptionsSummaryAllOf {
	return &NullableUserWorkflowSubscriptionsSummaryAllOf{value: val, isSet: true}
}

func (v NullableUserWorkflowSubscriptionsSummaryAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserWorkflowSubscriptionsSummaryAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


