/*
 * Relay API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v20200615
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// EntityAccess Access control information for a given entity
type EntityAccess struct {
	// The grants available relative to this entity
	PermissionGrants *[]PermissionGrant `json:"permission_grants,omitempty"`
}

// NewEntityAccess instantiates a new EntityAccess object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntityAccess() *EntityAccess {
	this := EntityAccess{}
	return &this
}

// NewEntityAccessWithDefaults instantiates a new EntityAccess object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntityAccessWithDefaults() *EntityAccess {
	this := EntityAccess{}
	return &this
}

// GetPermissionGrants returns the PermissionGrants field value if set, zero value otherwise.
func (o *EntityAccess) GetPermissionGrants() []PermissionGrant {
	if o == nil || o.PermissionGrants == nil {
		var ret []PermissionGrant
		return ret
	}
	return *o.PermissionGrants
}

// GetPermissionGrantsOk returns a tuple with the PermissionGrants field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntityAccess) GetPermissionGrantsOk() (*[]PermissionGrant, bool) {
	if o == nil || o.PermissionGrants == nil {
		return nil, false
	}
	return o.PermissionGrants, true
}

// HasPermissionGrants returns a boolean if a field has been set.
func (o *EntityAccess) HasPermissionGrants() bool {
	if o != nil && o.PermissionGrants != nil {
		return true
	}

	return false
}

// SetPermissionGrants gets a reference to the given []PermissionGrant and assigns it to the PermissionGrants field.
func (o *EntityAccess) SetPermissionGrants(v []PermissionGrant) {
	o.PermissionGrants = &v
}

func (o EntityAccess) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PermissionGrants != nil {
		toSerialize["permission_grants"] = o.PermissionGrants
	}
	return json.Marshal(toSerialize)
}

type NullableEntityAccess struct {
	value *EntityAccess
	isSet bool
}

func (v NullableEntityAccess) Get() *EntityAccess {
	return v.value
}

func (v *NullableEntityAccess) Set(val *EntityAccess) {
	v.value = val
	v.isSet = true
}

func (v NullableEntityAccess) IsSet() bool {
	return v.isSet
}

func (v *NullableEntityAccess) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntityAccess(val *EntityAccess) *NullableEntityAccess {
	return &NullableEntityAccess{value: val, isSet: true}
}

func (v NullableEntityAccess) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntityAccess) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


