/*
Relay API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v20200615
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CreateWorkflowSecret201ResponseAllOf The response type for creating a workflow secret
type CreateWorkflowSecret201ResponseAllOf struct {
	Secret *WorkflowSecretSummary `json:"secret,omitempty"`
}

// NewCreateWorkflowSecret201ResponseAllOf instantiates a new CreateWorkflowSecret201ResponseAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateWorkflowSecret201ResponseAllOf() *CreateWorkflowSecret201ResponseAllOf {
	this := CreateWorkflowSecret201ResponseAllOf{}
	return &this
}

// NewCreateWorkflowSecret201ResponseAllOfWithDefaults instantiates a new CreateWorkflowSecret201ResponseAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateWorkflowSecret201ResponseAllOfWithDefaults() *CreateWorkflowSecret201ResponseAllOf {
	this := CreateWorkflowSecret201ResponseAllOf{}
	return &this
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *CreateWorkflowSecret201ResponseAllOf) GetSecret() WorkflowSecretSummary {
	if o == nil || o.Secret == nil {
		var ret WorkflowSecretSummary
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateWorkflowSecret201ResponseAllOf) GetSecretOk() (*WorkflowSecretSummary, bool) {
	if o == nil || o.Secret == nil {
		return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *CreateWorkflowSecret201ResponseAllOf) HasSecret() bool {
	if o != nil && o.Secret != nil {
		return true
	}

	return false
}

// SetSecret gets a reference to the given WorkflowSecretSummary and assigns it to the Secret field.
func (o *CreateWorkflowSecret201ResponseAllOf) SetSecret(v WorkflowSecretSummary) {
	o.Secret = &v
}

func (o CreateWorkflowSecret201ResponseAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Secret != nil {
		toSerialize["secret"] = o.Secret
	}
	return json.Marshal(toSerialize)
}

type NullableCreateWorkflowSecret201ResponseAllOf struct {
	value *CreateWorkflowSecret201ResponseAllOf
	isSet bool
}

func (v NullableCreateWorkflowSecret201ResponseAllOf) Get() *CreateWorkflowSecret201ResponseAllOf {
	return v.value
}

func (v *NullableCreateWorkflowSecret201ResponseAllOf) Set(val *CreateWorkflowSecret201ResponseAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateWorkflowSecret201ResponseAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateWorkflowSecret201ResponseAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateWorkflowSecret201ResponseAllOf(val *CreateWorkflowSecret201ResponseAllOf) *NullableCreateWorkflowSecret201ResponseAllOf {
	return &NullableCreateWorkflowSecret201ResponseAllOf{value: val, isSet: true}
}

func (v NullableCreateWorkflowSecret201ResponseAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateWorkflowSecret201ResponseAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
