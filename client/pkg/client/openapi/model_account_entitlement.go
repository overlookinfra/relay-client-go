/*
Relay API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v20200615
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// AccountEntitlement An association between an account and a product entitlement
type AccountEntitlement struct {
	CurrentPlan  EntitlementPlanSummary      `json:"current_plan"`
	CurrentPrice EntitlementPlanPriceSummary `json:"current_price"`
	Entitlement  EntitlementSummary          `json:"entitlement"`
	// What the system should do when the entitlement expires
	ExpirationBehavior string `json:"expiration_behavior"`
	// Timestamp of when this account entitlement is set to end
	ExpiresAt time.Time `json:"expires_at"`
	// Unique identifier for this account/entitlement association
	Id string `json:"id"`
	// Current trial state of this account entitlement
	TrialState NullableString `json:"trial_state"`
}

// NewAccountEntitlement instantiates a new AccountEntitlement object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountEntitlement(currentPlan EntitlementPlanSummary, currentPrice EntitlementPlanPriceSummary, entitlement EntitlementSummary, expirationBehavior string, expiresAt time.Time, id string, trialState NullableString) *AccountEntitlement {
	this := AccountEntitlement{}
	this.CurrentPlan = currentPlan
	this.CurrentPrice = currentPrice
	this.Entitlement = entitlement
	this.ExpirationBehavior = expirationBehavior
	this.ExpiresAt = expiresAt
	this.Id = id
	this.TrialState = trialState
	return &this
}

// NewAccountEntitlementWithDefaults instantiates a new AccountEntitlement object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountEntitlementWithDefaults() *AccountEntitlement {
	this := AccountEntitlement{}
	return &this
}

// GetCurrentPlan returns the CurrentPlan field value
func (o *AccountEntitlement) GetCurrentPlan() EntitlementPlanSummary {
	if o == nil {
		var ret EntitlementPlanSummary
		return ret
	}

	return o.CurrentPlan
}

// GetCurrentPlanOk returns a tuple with the CurrentPlan field value
// and a boolean to check if the value has been set.
func (o *AccountEntitlement) GetCurrentPlanOk() (*EntitlementPlanSummary, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CurrentPlan, true
}

// SetCurrentPlan sets field value
func (o *AccountEntitlement) SetCurrentPlan(v EntitlementPlanSummary) {
	o.CurrentPlan = v
}

// GetCurrentPrice returns the CurrentPrice field value
func (o *AccountEntitlement) GetCurrentPrice() EntitlementPlanPriceSummary {
	if o == nil {
		var ret EntitlementPlanPriceSummary
		return ret
	}

	return o.CurrentPrice
}

// GetCurrentPriceOk returns a tuple with the CurrentPrice field value
// and a boolean to check if the value has been set.
func (o *AccountEntitlement) GetCurrentPriceOk() (*EntitlementPlanPriceSummary, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CurrentPrice, true
}

// SetCurrentPrice sets field value
func (o *AccountEntitlement) SetCurrentPrice(v EntitlementPlanPriceSummary) {
	o.CurrentPrice = v
}

// GetEntitlement returns the Entitlement field value
func (o *AccountEntitlement) GetEntitlement() EntitlementSummary {
	if o == nil {
		var ret EntitlementSummary
		return ret
	}

	return o.Entitlement
}

// GetEntitlementOk returns a tuple with the Entitlement field value
// and a boolean to check if the value has been set.
func (o *AccountEntitlement) GetEntitlementOk() (*EntitlementSummary, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Entitlement, true
}

// SetEntitlement sets field value
func (o *AccountEntitlement) SetEntitlement(v EntitlementSummary) {
	o.Entitlement = v
}

// GetExpirationBehavior returns the ExpirationBehavior field value
func (o *AccountEntitlement) GetExpirationBehavior() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExpirationBehavior
}

// GetExpirationBehaviorOk returns a tuple with the ExpirationBehavior field value
// and a boolean to check if the value has been set.
func (o *AccountEntitlement) GetExpirationBehaviorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpirationBehavior, true
}

// SetExpirationBehavior sets field value
func (o *AccountEntitlement) SetExpirationBehavior(v string) {
	o.ExpirationBehavior = v
}

// GetExpiresAt returns the ExpiresAt field value
func (o *AccountEntitlement) GetExpiresAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ExpiresAt
}

// GetExpiresAtOk returns a tuple with the ExpiresAt field value
// and a boolean to check if the value has been set.
func (o *AccountEntitlement) GetExpiresAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpiresAt, true
}

// SetExpiresAt sets field value
func (o *AccountEntitlement) SetExpiresAt(v time.Time) {
	o.ExpiresAt = v
}

// GetId returns the Id field value
func (o *AccountEntitlement) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AccountEntitlement) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AccountEntitlement) SetId(v string) {
	o.Id = v
}

// GetTrialState returns the TrialState field value
// If the value is explicit nil, the zero value for string will be returned
func (o *AccountEntitlement) GetTrialState() string {
	if o == nil || o.TrialState.Get() == nil {
		var ret string
		return ret
	}

	return *o.TrialState.Get()
}

// GetTrialStateOk returns a tuple with the TrialState field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountEntitlement) GetTrialStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TrialState.Get(), o.TrialState.IsSet()
}

// SetTrialState sets field value
func (o *AccountEntitlement) SetTrialState(v string) {
	o.TrialState.Set(&v)
}

func (o AccountEntitlement) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["current_plan"] = o.CurrentPlan
	}
	if true {
		toSerialize["current_price"] = o.CurrentPrice
	}
	if true {
		toSerialize["entitlement"] = o.Entitlement
	}
	if true {
		toSerialize["expiration_behavior"] = o.ExpirationBehavior
	}
	if true {
		toSerialize["expires_at"] = o.ExpiresAt
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["trial_state"] = o.TrialState.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableAccountEntitlement struct {
	value *AccountEntitlement
	isSet bool
}

func (v NullableAccountEntitlement) Get() *AccountEntitlement {
	return v.value
}

func (v *NullableAccountEntitlement) Set(val *AccountEntitlement) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountEntitlement) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountEntitlement) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountEntitlement(val *AccountEntitlement) *NullableAccountEntitlement {
	return &NullableAccountEntitlement{value: val, isSet: true}
}

func (v NullableAccountEntitlement) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountEntitlement) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
