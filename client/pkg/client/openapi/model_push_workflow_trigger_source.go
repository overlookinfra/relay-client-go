/*
Relay API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v20200615
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PushWorkflowTriggerSource A trigger provided by externally submitted events
type PushWorkflowTriggerSource struct {
	// An optional schema to enforce on submitted event data
	Schema *map[string]SchemaField `json:"schema,omitempty"`
	// The type discriminator for this trigger source
	Type string `json:"type"`
}

// NewPushWorkflowTriggerSource instantiates a new PushWorkflowTriggerSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPushWorkflowTriggerSource(type_ string) *PushWorkflowTriggerSource {
	this := PushWorkflowTriggerSource{}
	this.Type = type_
	return &this
}

// NewPushWorkflowTriggerSourceWithDefaults instantiates a new PushWorkflowTriggerSource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPushWorkflowTriggerSourceWithDefaults() *PushWorkflowTriggerSource {
	this := PushWorkflowTriggerSource{}
	return &this
}

// GetSchema returns the Schema field value if set, zero value otherwise.
func (o *PushWorkflowTriggerSource) GetSchema() map[string]SchemaField {
	if o == nil || o.Schema == nil {
		var ret map[string]SchemaField
		return ret
	}
	return *o.Schema
}

// GetSchemaOk returns a tuple with the Schema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PushWorkflowTriggerSource) GetSchemaOk() (*map[string]SchemaField, bool) {
	if o == nil || o.Schema == nil {
		return nil, false
	}
	return o.Schema, true
}

// HasSchema returns a boolean if a field has been set.
func (o *PushWorkflowTriggerSource) HasSchema() bool {
	if o != nil && o.Schema != nil {
		return true
	}

	return false
}

// SetSchema gets a reference to the given map[string]SchemaField and assigns it to the Schema field.
func (o *PushWorkflowTriggerSource) SetSchema(v map[string]SchemaField) {
	o.Schema = &v
}

// GetType returns the Type field value
func (o *PushWorkflowTriggerSource) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *PushWorkflowTriggerSource) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *PushWorkflowTriggerSource) SetType(v string) {
	o.Type = v
}

func (o PushWorkflowTriggerSource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Schema != nil {
		toSerialize["schema"] = o.Schema
	}
	if true {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullablePushWorkflowTriggerSource struct {
	value *PushWorkflowTriggerSource
	isSet bool
}

func (v NullablePushWorkflowTriggerSource) Get() *PushWorkflowTriggerSource {
	return v.value
}

func (v *NullablePushWorkflowTriggerSource) Set(val *PushWorkflowTriggerSource) {
	v.value = val
	v.isSet = true
}

func (v NullablePushWorkflowTriggerSource) IsSet() bool {
	return v.isSet
}

func (v *NullablePushWorkflowTriggerSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePushWorkflowTriggerSource(val *PushWorkflowTriggerSource) *NullablePushWorkflowTriggerSource {
	return &NullablePushWorkflowTriggerSource{value: val, isSet: true}
}

func (v NullablePushWorkflowTriggerSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePushWorkflowTriggerSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
