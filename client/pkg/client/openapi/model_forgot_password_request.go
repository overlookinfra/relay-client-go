/*
Relay API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v20200615
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ForgotPasswordRequest A request to reset a user's password
type ForgotPasswordRequest struct {
	// User email
	Email string `json:"email"`
}

// NewForgotPasswordRequest instantiates a new ForgotPasswordRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewForgotPasswordRequest(email string) *ForgotPasswordRequest {
	this := ForgotPasswordRequest{}
	this.Email = email
	return &this
}

// NewForgotPasswordRequestWithDefaults instantiates a new ForgotPasswordRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewForgotPasswordRequestWithDefaults() *ForgotPasswordRequest {
	this := ForgotPasswordRequest{}
	return &this
}

// GetEmail returns the Email field value
func (o *ForgotPasswordRequest) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *ForgotPasswordRequest) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *ForgotPasswordRequest) SetEmail(v string) {
	o.Email = v
}

func (o ForgotPasswordRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["email"] = o.Email
	}
	return json.Marshal(toSerialize)
}

type NullableForgotPasswordRequest struct {
	value *ForgotPasswordRequest
	isSet bool
}

func (v NullableForgotPasswordRequest) Get() *ForgotPasswordRequest {
	return v.value
}

func (v *NullableForgotPasswordRequest) Set(val *ForgotPasswordRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableForgotPasswordRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableForgotPasswordRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableForgotPasswordRequest(val *ForgotPasswordRequest) *NullableForgotPasswordRequest {
	return &NullableForgotPasswordRequest{value: val, isSet: true}
}

func (v NullableForgotPasswordRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableForgotPasswordRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
