/*
 * Relay API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v20200615
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UserSummary struct for UserSummary
type UserSummary struct {
	// The unique ID of this user
	Id string `json:"id"`
	// User email
	Email *string `json:"email,omitempty"`
	// User name
	Name string `json:"name"`
}

// NewUserSummary instantiates a new UserSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserSummary(id string, name string) *UserSummary {
	this := UserSummary{}
	this.Id = id
	this.Name = name
	return &this
}

// NewUserSummaryWithDefaults instantiates a new UserSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserSummaryWithDefaults() *UserSummary {
	this := UserSummary{}
	return &this
}

// GetId returns the Id field value
func (o *UserSummary) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *UserSummary) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *UserSummary) SetId(v string) {
	o.Id = v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *UserSummary) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSummary) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *UserSummary) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *UserSummary) SetEmail(v string) {
	o.Email = &v
}

// GetName returns the Name field value
func (o *UserSummary) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *UserSummary) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *UserSummary) SetName(v string) {
	o.Name = v
}

func (o UserSummary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if true {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableUserSummary struct {
	value *UserSummary
	isSet bool
}

func (v NullableUserSummary) Get() *UserSummary {
	return v.value
}

func (v *NullableUserSummary) Set(val *UserSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableUserSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableUserSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserSummary(val *UserSummary) *NullableUserSummary {
	return &NullableUserSummary{value: val, isSet: true}
}

func (v NullableUserSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


