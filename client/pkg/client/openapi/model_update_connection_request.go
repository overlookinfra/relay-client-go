/*
Relay API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v20200615
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UpdateConnectionRequest The editable fields of an external connection
type UpdateConnectionRequest struct {
	Auth *ConnectionAuthInput `json:"auth,omitempty"`
	// A descriptive connection name
	Name string `json:"name"`
}

// NewUpdateConnectionRequest instantiates a new UpdateConnectionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateConnectionRequest(name string) *UpdateConnectionRequest {
	this := UpdateConnectionRequest{}
	this.Name = name
	return &this
}

// NewUpdateConnectionRequestWithDefaults instantiates a new UpdateConnectionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateConnectionRequestWithDefaults() *UpdateConnectionRequest {
	this := UpdateConnectionRequest{}
	return &this
}

// GetAuth returns the Auth field value if set, zero value otherwise.
func (o *UpdateConnectionRequest) GetAuth() ConnectionAuthInput {
	if o == nil || o.Auth == nil {
		var ret ConnectionAuthInput
		return ret
	}
	return *o.Auth
}

// GetAuthOk returns a tuple with the Auth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateConnectionRequest) GetAuthOk() (*ConnectionAuthInput, bool) {
	if o == nil || o.Auth == nil {
		return nil, false
	}
	return o.Auth, true
}

// HasAuth returns a boolean if a field has been set.
func (o *UpdateConnectionRequest) HasAuth() bool {
	if o != nil && o.Auth != nil {
		return true
	}

	return false
}

// SetAuth gets a reference to the given ConnectionAuthInput and assigns it to the Auth field.
func (o *UpdateConnectionRequest) SetAuth(v ConnectionAuthInput) {
	o.Auth = &v
}

// GetName returns the Name field value
func (o *UpdateConnectionRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *UpdateConnectionRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *UpdateConnectionRequest) SetName(v string) {
	o.Name = v
}

func (o UpdateConnectionRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Auth != nil {
		toSerialize["auth"] = o.Auth
	}
	if true {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateConnectionRequest struct {
	value *UpdateConnectionRequest
	isSet bool
}

func (v NullableUpdateConnectionRequest) Get() *UpdateConnectionRequest {
	return v.value
}

func (v *NullableUpdateConnectionRequest) Set(val *UpdateConnectionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateConnectionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateConnectionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateConnectionRequest(val *UpdateConnectionRequest) *NullableUpdateConnectionRequest {
	return &NullableUpdateConnectionRequest{value: val, isSet: true}
}

func (v NullableUpdateConnectionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateConnectionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
