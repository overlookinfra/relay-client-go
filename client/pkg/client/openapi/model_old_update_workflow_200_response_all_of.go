/*
Relay API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v20200615
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// OldUpdateWorkflow200ResponseAllOf The response type for updating a workflow
type OldUpdateWorkflow200ResponseAllOf struct {
	Workflow *Workflow `json:"workflow,omitempty"`
}

// NewOldUpdateWorkflow200ResponseAllOf instantiates a new OldUpdateWorkflow200ResponseAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOldUpdateWorkflow200ResponseAllOf() *OldUpdateWorkflow200ResponseAllOf {
	this := OldUpdateWorkflow200ResponseAllOf{}
	return &this
}

// NewOldUpdateWorkflow200ResponseAllOfWithDefaults instantiates a new OldUpdateWorkflow200ResponseAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOldUpdateWorkflow200ResponseAllOfWithDefaults() *OldUpdateWorkflow200ResponseAllOf {
	this := OldUpdateWorkflow200ResponseAllOf{}
	return &this
}

// GetWorkflow returns the Workflow field value if set, zero value otherwise.
func (o *OldUpdateWorkflow200ResponseAllOf) GetWorkflow() Workflow {
	if o == nil || o.Workflow == nil {
		var ret Workflow
		return ret
	}
	return *o.Workflow
}

// GetWorkflowOk returns a tuple with the Workflow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OldUpdateWorkflow200ResponseAllOf) GetWorkflowOk() (*Workflow, bool) {
	if o == nil || o.Workflow == nil {
		return nil, false
	}
	return o.Workflow, true
}

// HasWorkflow returns a boolean if a field has been set.
func (o *OldUpdateWorkflow200ResponseAllOf) HasWorkflow() bool {
	if o != nil && o.Workflow != nil {
		return true
	}

	return false
}

// SetWorkflow gets a reference to the given Workflow and assigns it to the Workflow field.
func (o *OldUpdateWorkflow200ResponseAllOf) SetWorkflow(v Workflow) {
	o.Workflow = &v
}

func (o OldUpdateWorkflow200ResponseAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Workflow != nil {
		toSerialize["workflow"] = o.Workflow
	}
	return json.Marshal(toSerialize)
}

type NullableOldUpdateWorkflow200ResponseAllOf struct {
	value *OldUpdateWorkflow200ResponseAllOf
	isSet bool
}

func (v NullableOldUpdateWorkflow200ResponseAllOf) Get() *OldUpdateWorkflow200ResponseAllOf {
	return v.value
}

func (v *NullableOldUpdateWorkflow200ResponseAllOf) Set(val *OldUpdateWorkflow200ResponseAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableOldUpdateWorkflow200ResponseAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableOldUpdateWorkflow200ResponseAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOldUpdateWorkflow200ResponseAllOf(val *OldUpdateWorkflow200ResponseAllOf) *NullableOldUpdateWorkflow200ResponseAllOf {
	return &NullableOldUpdateWorkflow200ResponseAllOf{value: val, isSet: true}
}

func (v NullableOldUpdateWorkflow200ResponseAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOldUpdateWorkflow200ResponseAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
