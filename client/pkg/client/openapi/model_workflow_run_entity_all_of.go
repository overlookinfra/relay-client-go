/*
Relay API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v20200615
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// WorkflowRunEntityAllOf The response type for running a workflow
type WorkflowRunEntityAllOf struct {
	Run *WorkflowRun `json:"run,omitempty"`
}

// NewWorkflowRunEntityAllOf instantiates a new WorkflowRunEntityAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowRunEntityAllOf() *WorkflowRunEntityAllOf {
	this := WorkflowRunEntityAllOf{}
	return &this
}

// NewWorkflowRunEntityAllOfWithDefaults instantiates a new WorkflowRunEntityAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowRunEntityAllOfWithDefaults() *WorkflowRunEntityAllOf {
	this := WorkflowRunEntityAllOf{}
	return &this
}

// GetRun returns the Run field value if set, zero value otherwise.
func (o *WorkflowRunEntityAllOf) GetRun() WorkflowRun {
	if o == nil || o.Run == nil {
		var ret WorkflowRun
		return ret
	}
	return *o.Run
}

// GetRunOk returns a tuple with the Run field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowRunEntityAllOf) GetRunOk() (*WorkflowRun, bool) {
	if o == nil || o.Run == nil {
		return nil, false
	}
	return o.Run, true
}

// HasRun returns a boolean if a field has been set.
func (o *WorkflowRunEntityAllOf) HasRun() bool {
	if o != nil && o.Run != nil {
		return true
	}

	return false
}

// SetRun gets a reference to the given WorkflowRun and assigns it to the Run field.
func (o *WorkflowRunEntityAllOf) SetRun(v WorkflowRun) {
	o.Run = &v
}

func (o WorkflowRunEntityAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Run != nil {
		toSerialize["run"] = o.Run
	}
	return json.Marshal(toSerialize)
}

type NullableWorkflowRunEntityAllOf struct {
	value *WorkflowRunEntityAllOf
	isSet bool
}

func (v NullableWorkflowRunEntityAllOf) Get() *WorkflowRunEntityAllOf {
	return v.value
}

func (v *NullableWorkflowRunEntityAllOf) Set(val *WorkflowRunEntityAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowRunEntityAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowRunEntityAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowRunEntityAllOf(val *WorkflowRunEntityAllOf) *NullableWorkflowRunEntityAllOf {
	return &NullableWorkflowRunEntityAllOf{value: val, isSet: true}
}

func (v NullableWorkflowRunEntityAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowRunEntityAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
