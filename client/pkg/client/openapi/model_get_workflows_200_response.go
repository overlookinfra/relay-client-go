/*
Relay API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v20200615
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GetWorkflows200Response An object containing an array of workflows
type GetWorkflows200Response struct {
	// A list of workflows
	Workflows []WorkflowView `json:"workflows,omitempty"`
}

// NewGetWorkflows200Response instantiates a new GetWorkflows200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetWorkflows200Response() *GetWorkflows200Response {
	this := GetWorkflows200Response{}
	return &this
}

// NewGetWorkflows200ResponseWithDefaults instantiates a new GetWorkflows200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetWorkflows200ResponseWithDefaults() *GetWorkflows200Response {
	this := GetWorkflows200Response{}
	return &this
}

// GetWorkflows returns the Workflows field value if set, zero value otherwise.
func (o *GetWorkflows200Response) GetWorkflows() []WorkflowView {
	if o == nil || o.Workflows == nil {
		var ret []WorkflowView
		return ret
	}
	return o.Workflows
}

// GetWorkflowsOk returns a tuple with the Workflows field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetWorkflows200Response) GetWorkflowsOk() ([]WorkflowView, bool) {
	if o == nil || o.Workflows == nil {
		return nil, false
	}
	return o.Workflows, true
}

// HasWorkflows returns a boolean if a field has been set.
func (o *GetWorkflows200Response) HasWorkflows() bool {
	if o != nil && o.Workflows != nil {
		return true
	}

	return false
}

// SetWorkflows gets a reference to the given []WorkflowView and assigns it to the Workflows field.
func (o *GetWorkflows200Response) SetWorkflows(v []WorkflowView) {
	o.Workflows = v
}

func (o GetWorkflows200Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Workflows != nil {
		toSerialize["workflows"] = o.Workflows
	}
	return json.Marshal(toSerialize)
}

type NullableGetWorkflows200Response struct {
	value *GetWorkflows200Response
	isSet bool
}

func (v NullableGetWorkflows200Response) Get() *GetWorkflows200Response {
	return v.value
}

func (v *NullableGetWorkflows200Response) Set(val *GetWorkflows200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetWorkflows200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetWorkflows200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetWorkflows200Response(val *GetWorkflows200Response) *NullableGetWorkflows200Response {
	return &NullableGetWorkflows200Response{value: val, isSet: true}
}

func (v NullableGetWorkflows200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetWorkflows200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
