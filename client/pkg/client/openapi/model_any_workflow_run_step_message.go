/*
Relay API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v20200615
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// AnyWorkflowRunStepMessage Shared properties of a step message
type AnyWorkflowRunStepMessage struct {
	// The long-form content of the message
	Details string `json:"details"`
	// The time the event occurred that generated this message
	ObservedAt time.Time `json:"observed_at"`
	// The severity of the message
	Severity string `json:"severity"`
	// A short summary of the message for use as a title
	Short *string `json:"short,omitempty"`
}

// NewAnyWorkflowRunStepMessage instantiates a new AnyWorkflowRunStepMessage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAnyWorkflowRunStepMessage(details string, observedAt time.Time, severity string) *AnyWorkflowRunStepMessage {
	this := AnyWorkflowRunStepMessage{}
	this.Details = details
	this.ObservedAt = observedAt
	this.Severity = severity
	return &this
}

// NewAnyWorkflowRunStepMessageWithDefaults instantiates a new AnyWorkflowRunStepMessage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAnyWorkflowRunStepMessageWithDefaults() *AnyWorkflowRunStepMessage {
	this := AnyWorkflowRunStepMessage{}
	return &this
}

// GetDetails returns the Details field value
func (o *AnyWorkflowRunStepMessage) GetDetails() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Details
}

// GetDetailsOk returns a tuple with the Details field value
// and a boolean to check if the value has been set.
func (o *AnyWorkflowRunStepMessage) GetDetailsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Details, true
}

// SetDetails sets field value
func (o *AnyWorkflowRunStepMessage) SetDetails(v string) {
	o.Details = v
}

// GetObservedAt returns the ObservedAt field value
func (o *AnyWorkflowRunStepMessage) GetObservedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ObservedAt
}

// GetObservedAtOk returns a tuple with the ObservedAt field value
// and a boolean to check if the value has been set.
func (o *AnyWorkflowRunStepMessage) GetObservedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObservedAt, true
}

// SetObservedAt sets field value
func (o *AnyWorkflowRunStepMessage) SetObservedAt(v time.Time) {
	o.ObservedAt = v
}

// GetSeverity returns the Severity field value
func (o *AnyWorkflowRunStepMessage) GetSeverity() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value
// and a boolean to check if the value has been set.
func (o *AnyWorkflowRunStepMessage) GetSeverityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Severity, true
}

// SetSeverity sets field value
func (o *AnyWorkflowRunStepMessage) SetSeverity(v string) {
	o.Severity = v
}

// GetShort returns the Short field value if set, zero value otherwise.
func (o *AnyWorkflowRunStepMessage) GetShort() string {
	if o == nil || o.Short == nil {
		var ret string
		return ret
	}
	return *o.Short
}

// GetShortOk returns a tuple with the Short field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnyWorkflowRunStepMessage) GetShortOk() (*string, bool) {
	if o == nil || o.Short == nil {
		return nil, false
	}
	return o.Short, true
}

// HasShort returns a boolean if a field has been set.
func (o *AnyWorkflowRunStepMessage) HasShort() bool {
	if o != nil && o.Short != nil {
		return true
	}

	return false
}

// SetShort gets a reference to the given string and assigns it to the Short field.
func (o *AnyWorkflowRunStepMessage) SetShort(v string) {
	o.Short = &v
}

func (o AnyWorkflowRunStepMessage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["details"] = o.Details
	}
	if true {
		toSerialize["observed_at"] = o.ObservedAt
	}
	if true {
		toSerialize["severity"] = o.Severity
	}
	if o.Short != nil {
		toSerialize["short"] = o.Short
	}
	return json.Marshal(toSerialize)
}

type NullableAnyWorkflowRunStepMessage struct {
	value *AnyWorkflowRunStepMessage
	isSet bool
}

func (v NullableAnyWorkflowRunStepMessage) Get() *AnyWorkflowRunStepMessage {
	return v.value
}

func (v *NullableAnyWorkflowRunStepMessage) Set(val *AnyWorkflowRunStepMessage) {
	v.value = val
	v.isSet = true
}

func (v NullableAnyWorkflowRunStepMessage) IsSet() bool {
	return v.isSet
}

func (v *NullableAnyWorkflowRunStepMessage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAnyWorkflowRunStepMessage(val *AnyWorkflowRunStepMessage) *NullableAnyWorkflowRunStepMessage {
	return &NullableAnyWorkflowRunStepMessage{value: val, isSet: true}
}

func (v NullableAnyWorkflowRunStepMessage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAnyWorkflowRunStepMessage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
