/*
Relay API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v20200615
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UpdateWorkflowSecret200ResponseAllOf The response type for updating a workflow secret
type UpdateWorkflowSecret200ResponseAllOf struct {
	Secret *WorkflowSecretSummary `json:"secret,omitempty"`
}

// NewUpdateWorkflowSecret200ResponseAllOf instantiates a new UpdateWorkflowSecret200ResponseAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateWorkflowSecret200ResponseAllOf() *UpdateWorkflowSecret200ResponseAllOf {
	this := UpdateWorkflowSecret200ResponseAllOf{}
	return &this
}

// NewUpdateWorkflowSecret200ResponseAllOfWithDefaults instantiates a new UpdateWorkflowSecret200ResponseAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateWorkflowSecret200ResponseAllOfWithDefaults() *UpdateWorkflowSecret200ResponseAllOf {
	this := UpdateWorkflowSecret200ResponseAllOf{}
	return &this
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *UpdateWorkflowSecret200ResponseAllOf) GetSecret() WorkflowSecretSummary {
	if o == nil || o.Secret == nil {
		var ret WorkflowSecretSummary
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateWorkflowSecret200ResponseAllOf) GetSecretOk() (*WorkflowSecretSummary, bool) {
	if o == nil || o.Secret == nil {
		return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *UpdateWorkflowSecret200ResponseAllOf) HasSecret() bool {
	if o != nil && o.Secret != nil {
		return true
	}

	return false
}

// SetSecret gets a reference to the given WorkflowSecretSummary and assigns it to the Secret field.
func (o *UpdateWorkflowSecret200ResponseAllOf) SetSecret(v WorkflowSecretSummary) {
	o.Secret = &v
}

func (o UpdateWorkflowSecret200ResponseAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Secret != nil {
		toSerialize["secret"] = o.Secret
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateWorkflowSecret200ResponseAllOf struct {
	value *UpdateWorkflowSecret200ResponseAllOf
	isSet bool
}

func (v NullableUpdateWorkflowSecret200ResponseAllOf) Get() *UpdateWorkflowSecret200ResponseAllOf {
	return v.value
}

func (v *NullableUpdateWorkflowSecret200ResponseAllOf) Set(val *UpdateWorkflowSecret200ResponseAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateWorkflowSecret200ResponseAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateWorkflowSecret200ResponseAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateWorkflowSecret200ResponseAllOf(val *UpdateWorkflowSecret200ResponseAllOf) *NullableUpdateWorkflowSecret200ResponseAllOf {
	return &NullableUpdateWorkflowSecret200ResponseAllOf{value: val, isSet: true}
}

func (v NullableUpdateWorkflowSecret200ResponseAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateWorkflowSecret200ResponseAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
