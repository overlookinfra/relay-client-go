/*
 * Relay API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v20200615
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UserWorkflowsSubscriptions An object containing an array of workflow subscriptions
type UserWorkflowsSubscriptions struct {
	// A list of all workflow subscriptions
	Workflows *[]UserWorkflowSubscriptionsSummary `json:"workflows,omitempty"`
}

// NewUserWorkflowsSubscriptions instantiates a new UserWorkflowsSubscriptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserWorkflowsSubscriptions() *UserWorkflowsSubscriptions {
	this := UserWorkflowsSubscriptions{}
	return &this
}

// NewUserWorkflowsSubscriptionsWithDefaults instantiates a new UserWorkflowsSubscriptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserWorkflowsSubscriptionsWithDefaults() *UserWorkflowsSubscriptions {
	this := UserWorkflowsSubscriptions{}
	return &this
}

// GetWorkflows returns the Workflows field value if set, zero value otherwise.
func (o *UserWorkflowsSubscriptions) GetWorkflows() []UserWorkflowSubscriptionsSummary {
	if o == nil || o.Workflows == nil {
		var ret []UserWorkflowSubscriptionsSummary
		return ret
	}
	return *o.Workflows
}

// GetWorkflowsOk returns a tuple with the Workflows field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserWorkflowsSubscriptions) GetWorkflowsOk() (*[]UserWorkflowSubscriptionsSummary, bool) {
	if o == nil || o.Workflows == nil {
		return nil, false
	}
	return o.Workflows, true
}

// HasWorkflows returns a boolean if a field has been set.
func (o *UserWorkflowsSubscriptions) HasWorkflows() bool {
	if o != nil && o.Workflows != nil {
		return true
	}

	return false
}

// SetWorkflows gets a reference to the given []UserWorkflowSubscriptionsSummary and assigns it to the Workflows field.
func (o *UserWorkflowsSubscriptions) SetWorkflows(v []UserWorkflowSubscriptionsSummary) {
	o.Workflows = &v
}

func (o UserWorkflowsSubscriptions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Workflows != nil {
		toSerialize["workflows"] = o.Workflows
	}
	return json.Marshal(toSerialize)
}

type NullableUserWorkflowsSubscriptions struct {
	value *UserWorkflowsSubscriptions
	isSet bool
}

func (v NullableUserWorkflowsSubscriptions) Get() *UserWorkflowsSubscriptions {
	return v.value
}

func (v *NullableUserWorkflowsSubscriptions) Set(val *UserWorkflowsSubscriptions) {
	v.value = val
	v.isSet = true
}

func (v NullableUserWorkflowsSubscriptions) IsSet() bool {
	return v.isSet
}

func (v *NullableUserWorkflowsSubscriptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserWorkflowsSubscriptions(val *UserWorkflowsSubscriptions) *NullableUserWorkflowsSubscriptions {
	return &NullableUserWorkflowsSubscriptions{value: val, isSet: true}
}

func (v NullableUserWorkflowsSubscriptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserWorkflowsSubscriptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


