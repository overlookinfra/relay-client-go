/*
Relay API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v20200615
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CreateWorkflow201ResponseAllOf The response type for a created workflow
type CreateWorkflow201ResponseAllOf struct {
	Workflow *Workflow `json:"workflow,omitempty"`
}

// NewCreateWorkflow201ResponseAllOf instantiates a new CreateWorkflow201ResponseAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateWorkflow201ResponseAllOf() *CreateWorkflow201ResponseAllOf {
	this := CreateWorkflow201ResponseAllOf{}
	return &this
}

// NewCreateWorkflow201ResponseAllOfWithDefaults instantiates a new CreateWorkflow201ResponseAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateWorkflow201ResponseAllOfWithDefaults() *CreateWorkflow201ResponseAllOf {
	this := CreateWorkflow201ResponseAllOf{}
	return &this
}

// GetWorkflow returns the Workflow field value if set, zero value otherwise.
func (o *CreateWorkflow201ResponseAllOf) GetWorkflow() Workflow {
	if o == nil || o.Workflow == nil {
		var ret Workflow
		return ret
	}
	return *o.Workflow
}

// GetWorkflowOk returns a tuple with the Workflow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateWorkflow201ResponseAllOf) GetWorkflowOk() (*Workflow, bool) {
	if o == nil || o.Workflow == nil {
		return nil, false
	}
	return o.Workflow, true
}

// HasWorkflow returns a boolean if a field has been set.
func (o *CreateWorkflow201ResponseAllOf) HasWorkflow() bool {
	if o != nil && o.Workflow != nil {
		return true
	}

	return false
}

// SetWorkflow gets a reference to the given Workflow and assigns it to the Workflow field.
func (o *CreateWorkflow201ResponseAllOf) SetWorkflow(v Workflow) {
	o.Workflow = &v
}

func (o CreateWorkflow201ResponseAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Workflow != nil {
		toSerialize["workflow"] = o.Workflow
	}
	return json.Marshal(toSerialize)
}

type NullableCreateWorkflow201ResponseAllOf struct {
	value *CreateWorkflow201ResponseAllOf
	isSet bool
}

func (v NullableCreateWorkflow201ResponseAllOf) Get() *CreateWorkflow201ResponseAllOf {
	return v.value
}

func (v *NullableCreateWorkflow201ResponseAllOf) Set(val *CreateWorkflow201ResponseAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateWorkflow201ResponseAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateWorkflow201ResponseAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateWorkflow201ResponseAllOf(val *CreateWorkflow201ResponseAllOf) *NullableCreateWorkflow201ResponseAllOf {
	return &NullableCreateWorkflow201ResponseAllOf{value: val, isSet: true}
}

func (v NullableCreateWorkflow201ResponseAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateWorkflow201ResponseAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
