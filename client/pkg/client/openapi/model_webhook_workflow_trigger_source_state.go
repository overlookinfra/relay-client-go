/*
Relay API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v20200615
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// WebhookWorkflowTriggerSourceState The state of a webhook trigger
type WebhookWorkflowTriggerSourceState struct {
	// The fully qualified URL to the root path of the webhook trigger
	Endpoint *string `json:"endpoint,omitempty"`
	// The lifecycle status of this trigger
	Status string `json:"status"`
	// The type discriminator for this trigger source
	Type string `json:"type"`
}

// NewWebhookWorkflowTriggerSourceState instantiates a new WebhookWorkflowTriggerSourceState object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookWorkflowTriggerSourceState(status string, type_ string) *WebhookWorkflowTriggerSourceState {
	this := WebhookWorkflowTriggerSourceState{}
	this.Status = status
	this.Type = type_
	return &this
}

// NewWebhookWorkflowTriggerSourceStateWithDefaults instantiates a new WebhookWorkflowTriggerSourceState object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookWorkflowTriggerSourceStateWithDefaults() *WebhookWorkflowTriggerSourceState {
	this := WebhookWorkflowTriggerSourceState{}
	return &this
}

// GetEndpoint returns the Endpoint field value if set, zero value otherwise.
func (o *WebhookWorkflowTriggerSourceState) GetEndpoint() string {
	if o == nil || o.Endpoint == nil {
		var ret string
		return ret
	}
	return *o.Endpoint
}

// GetEndpointOk returns a tuple with the Endpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookWorkflowTriggerSourceState) GetEndpointOk() (*string, bool) {
	if o == nil || o.Endpoint == nil {
		return nil, false
	}
	return o.Endpoint, true
}

// HasEndpoint returns a boolean if a field has been set.
func (o *WebhookWorkflowTriggerSourceState) HasEndpoint() bool {
	if o != nil && o.Endpoint != nil {
		return true
	}

	return false
}

// SetEndpoint gets a reference to the given string and assigns it to the Endpoint field.
func (o *WebhookWorkflowTriggerSourceState) SetEndpoint(v string) {
	o.Endpoint = &v
}

// GetStatus returns the Status field value
func (o *WebhookWorkflowTriggerSourceState) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *WebhookWorkflowTriggerSourceState) GetStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *WebhookWorkflowTriggerSourceState) SetStatus(v string) {
	o.Status = v
}

// GetType returns the Type field value
func (o *WebhookWorkflowTriggerSourceState) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *WebhookWorkflowTriggerSourceState) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *WebhookWorkflowTriggerSourceState) SetType(v string) {
	o.Type = v
}

func (o WebhookWorkflowTriggerSourceState) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Endpoint != nil {
		toSerialize["endpoint"] = o.Endpoint
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableWebhookWorkflowTriggerSourceState struct {
	value *WebhookWorkflowTriggerSourceState
	isSet bool
}

func (v NullableWebhookWorkflowTriggerSourceState) Get() *WebhookWorkflowTriggerSourceState {
	return v.value
}

func (v *NullableWebhookWorkflowTriggerSourceState) Set(val *WebhookWorkflowTriggerSourceState) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookWorkflowTriggerSourceState) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookWorkflowTriggerSourceState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookWorkflowTriggerSourceState(val *WebhookWorkflowTriggerSourceState) *NullableWebhookWorkflowTriggerSourceState {
	return &NullableWebhookWorkflowTriggerSourceState{value: val, isSet: true}
}

func (v NullableWebhookWorkflowTriggerSourceState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookWorkflowTriggerSourceState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


