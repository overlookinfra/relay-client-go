/*
Relay API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v20200615
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CreateInviteRequest Request type for creating a new invite
type CreateInviteRequest struct {
	// The email address of the invitee
	Email string `json:"email"`
	// The full name of the invitee
	Name string `json:"name"`
	// The initial roles to grant to the user
	Roles []RoleIdentifier `json:"roles,omitempty"`
}

// NewCreateInviteRequest instantiates a new CreateInviteRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateInviteRequest(email string, name string) *CreateInviteRequest {
	this := CreateInviteRequest{}
	this.Email = email
	this.Name = name
	return &this
}

// NewCreateInviteRequestWithDefaults instantiates a new CreateInviteRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateInviteRequestWithDefaults() *CreateInviteRequest {
	this := CreateInviteRequest{}
	return &this
}

// GetEmail returns the Email field value
func (o *CreateInviteRequest) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *CreateInviteRequest) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *CreateInviteRequest) SetEmail(v string) {
	o.Email = v
}

// GetName returns the Name field value
func (o *CreateInviteRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateInviteRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateInviteRequest) SetName(v string) {
	o.Name = v
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *CreateInviteRequest) GetRoles() []RoleIdentifier {
	if o == nil || o.Roles == nil {
		var ret []RoleIdentifier
		return ret
	}
	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateInviteRequest) GetRolesOk() ([]RoleIdentifier, bool) {
	if o == nil || o.Roles == nil {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *CreateInviteRequest) HasRoles() bool {
	if o != nil && o.Roles != nil {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []RoleIdentifier and assigns it to the Roles field.
func (o *CreateInviteRequest) SetRoles(v []RoleIdentifier) {
	o.Roles = v
}

func (o CreateInviteRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["email"] = o.Email
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Roles != nil {
		toSerialize["roles"] = o.Roles
	}
	return json.Marshal(toSerialize)
}

type NullableCreateInviteRequest struct {
	value *CreateInviteRequest
	isSet bool
}

func (v NullableCreateInviteRequest) Get() *CreateInviteRequest {
	return v.value
}

func (v *NullableCreateInviteRequest) Set(val *CreateInviteRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateInviteRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateInviteRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateInviteRequest(val *CreateInviteRequest) *NullableCreateInviteRequest {
	return &NullableCreateInviteRequest{value: val, isSet: true}
}

func (v NullableCreateInviteRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateInviteRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
