/*
 * Relay API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v20200615
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// WorkflowTriggerBinding Binding descriptor for event data to a workflow run
type WorkflowTriggerBinding struct {
	// An optional key for this event
	Key *string `json:"key,omitempty"`
	// Binding descriptor for workflow parameter values
	Parameters *map[string]interface{} `json:"parameters,omitempty"`
}

// NewWorkflowTriggerBinding instantiates a new WorkflowTriggerBinding object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowTriggerBinding() *WorkflowTriggerBinding {
	this := WorkflowTriggerBinding{}
	return &this
}

// NewWorkflowTriggerBindingWithDefaults instantiates a new WorkflowTriggerBinding object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowTriggerBindingWithDefaults() *WorkflowTriggerBinding {
	this := WorkflowTriggerBinding{}
	return &this
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *WorkflowTriggerBinding) GetKey() string {
	if o == nil || o.Key == nil {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowTriggerBinding) GetKeyOk() (*string, bool) {
	if o == nil || o.Key == nil {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *WorkflowTriggerBinding) HasKey() bool {
	if o != nil && o.Key != nil {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *WorkflowTriggerBinding) SetKey(v string) {
	o.Key = &v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *WorkflowTriggerBinding) GetParameters() map[string]interface{} {
	if o == nil || o.Parameters == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowTriggerBinding) GetParametersOk() (*map[string]interface{}, bool) {
	if o == nil || o.Parameters == nil {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *WorkflowTriggerBinding) HasParameters() bool {
	if o != nil && o.Parameters != nil {
		return true
	}

	return false
}

// SetParameters gets a reference to the given map[string]interface{} and assigns it to the Parameters field.
func (o *WorkflowTriggerBinding) SetParameters(v map[string]interface{}) {
	o.Parameters = &v
}

func (o WorkflowTriggerBinding) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Key != nil {
		toSerialize["key"] = o.Key
	}
	if o.Parameters != nil {
		toSerialize["parameters"] = o.Parameters
	}
	return json.Marshal(toSerialize)
}

type NullableWorkflowTriggerBinding struct {
	value *WorkflowTriggerBinding
	isSet bool
}

func (v NullableWorkflowTriggerBinding) Get() *WorkflowTriggerBinding {
	return v.value
}

func (v *NullableWorkflowTriggerBinding) Set(val *WorkflowTriggerBinding) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowTriggerBinding) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowTriggerBinding) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowTriggerBinding(val *WorkflowTriggerBinding) *NullableWorkflowTriggerBinding {
	return &NullableWorkflowTriggerBinding{value: val, isSet: true}
}

func (v NullableWorkflowTriggerBinding) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowTriggerBinding) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


