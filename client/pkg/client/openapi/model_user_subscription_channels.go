/*
 * Relay API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v20200615
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UserSubscriptionChannels User subscription channels
type UserSubscriptionChannels struct {
	// Subscribe to in-app notifications
	App *bool `json:"app,omitempty"`
	// Subscribe to email notifications
	Email *bool `json:"email,omitempty"`
}

// NewUserSubscriptionChannels instantiates a new UserSubscriptionChannels object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserSubscriptionChannels() *UserSubscriptionChannels {
	this := UserSubscriptionChannels{}
	return &this
}

// NewUserSubscriptionChannelsWithDefaults instantiates a new UserSubscriptionChannels object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserSubscriptionChannelsWithDefaults() *UserSubscriptionChannels {
	this := UserSubscriptionChannels{}
	return &this
}

// GetApp returns the App field value if set, zero value otherwise.
func (o *UserSubscriptionChannels) GetApp() bool {
	if o == nil || o.App == nil {
		var ret bool
		return ret
	}
	return *o.App
}

// GetAppOk returns a tuple with the App field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSubscriptionChannels) GetAppOk() (*bool, bool) {
	if o == nil || o.App == nil {
		return nil, false
	}
	return o.App, true
}

// HasApp returns a boolean if a field has been set.
func (o *UserSubscriptionChannels) HasApp() bool {
	if o != nil && o.App != nil {
		return true
	}

	return false
}

// SetApp gets a reference to the given bool and assigns it to the App field.
func (o *UserSubscriptionChannels) SetApp(v bool) {
	o.App = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *UserSubscriptionChannels) GetEmail() bool {
	if o == nil || o.Email == nil {
		var ret bool
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSubscriptionChannels) GetEmailOk() (*bool, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *UserSubscriptionChannels) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given bool and assigns it to the Email field.
func (o *UserSubscriptionChannels) SetEmail(v bool) {
	o.Email = &v
}

func (o UserSubscriptionChannels) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.App != nil {
		toSerialize["app"] = o.App
	}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	return json.Marshal(toSerialize)
}

type NullableUserSubscriptionChannels struct {
	value *UserSubscriptionChannels
	isSet bool
}

func (v NullableUserSubscriptionChannels) Get() *UserSubscriptionChannels {
	return v.value
}

func (v *NullableUserSubscriptionChannels) Set(val *UserSubscriptionChannels) {
	v.value = val
	v.isSet = true
}

func (v NullableUserSubscriptionChannels) IsSet() bool {
	return v.isSet
}

func (v *NullableUserSubscriptionChannels) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserSubscriptionChannels(val *UserSubscriptionChannels) *NullableUserSubscriptionChannels {
	return &NullableUserSubscriptionChannels{value: val, isSet: true}
}

func (v NullableUserSubscriptionChannels) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserSubscriptionChannels) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


